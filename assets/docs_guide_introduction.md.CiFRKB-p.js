import{_ as e,c as t,o as a,a4 as r}from"./chunks/framework.D6UG3LSr.js";const f=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{"title":"Getting Started","outline":"deep"},"headers":[],"relativePath":"docs/guide/introduction.md","filePath":"docs/guide/introduction.md"}'),o={name:"docs/guide/introduction.md"},n=r('<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">â€‹</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">â€‹</a></h2><p>The JavaScript Oxidation Compiler (Oxc) is a collection of high-performance tools for the JavaScript language written in Rust.</p><p>Our focus lies in constructing essential compiler tools for JavaScript: parser, linter, formatter, transpiler, minifier and resolver.</p><p>Additionally, we provide support for emerging JavaScript tools like Rolldown.</p><p>Our goal is to create and empower tooling for <a href="https://www.swyx.io/js-third-age" target="_blank" rel="noreferrer">The Third Age of JavaScript</a>.</p><h2 id="endorsements" tabindex="-1">Endorsements <a class="header-anchor" href="#endorsements" aria-label="Permalink to &quot;Endorsements&quot;">â€‹</a></h2><h4 id="evan-you-creator-of-vue-js-and-vite" tabindex="-1"><a href="https://twitter.com/youyuxi/status/1734439543280128030" target="_blank" rel="noreferrer">Evan You</a>, creator of <a href="https://vuejs.org" target="_blank" rel="noreferrer">Vue.js</a> and <a href="https://vitejs.dev" target="_blank" rel="noreferrer">Vite</a>: <a class="header-anchor" href="#evan-you-creator-of-vue-js-and-vite" aria-label="Permalink to &quot;[Evan You](https://twitter.com/youyuxi/status/1734439543280128030), creator of [Vue.js](https://vuejs.org) and [Vite](https://vitejs.dev):&quot;">â€‹</a></h4><blockquote><p>Ran oxlint on the Vue 3 codebase, ~200 rules + ~590 files finished in 50ms ðŸ¤¯ (30ms re-runs)</p><p>The performance is absolutely nuts</p></blockquote><h4 id="jason-miller-creator-of-preact" tabindex="-1"><a href="https://github.com/developit" target="_blank" rel="noreferrer">Jason Miller</a>, creator of <a href="https://preactjs.com" target="_blank" rel="noreferrer">Preact</a>: <a class="header-anchor" href="#jason-miller-creator-of-preact" aria-label="Permalink to &quot;[Jason Miller](https://github.com/developit), creator of [Preact](https://preactjs.com):&quot;">â€‹</a></h4><blockquote><p>oxlint has been a massive win for us at Shopify. Our previous linting setup took 75 minutes to run, so we were fanning it out across 40+ workers in CI.</p><p>By comparison, oxlint takes around 10 seconds to lint the same codebase on a single worker, and the output is easier to interpret.</p><p>We even caught a few bugs that were hidden or skipped by our old setup when we migrated!</p></blockquote><h4 id="yagiz-nizipli-founder-of-node-js-performance-team" tabindex="-1"><a href="https://github.com/sponsors/anonrig" target="_blank" rel="noreferrer">Yagiz Nizipli</a>, founder of <a href="https://github.com/nodejs/performance" target="_blank" rel="noreferrer">Node.js performance team</a>: <a class="header-anchor" href="#yagiz-nizipli-founder-of-node-js-performance-team" aria-label="Permalink to &quot;[Yagiz Nizipli](https://github.com/sponsors/anonrig), founder of [Node.js performance team](https://github.com/nodejs/performance):&quot;">â€‹</a></h4><blockquote><p>I&#39;m impressed by how oxc is actively encouraging JavaScript tools to improve their performance.</p></blockquote><h4 id="eric-simons-ceo-of-stackblitz" tabindex="-1"><a href="https://twitter.com/ericsimons40/status/1766525300584947999" target="_blank" rel="noreferrer">Eric Simons</a>, CEO of <a href="https://stackblitz.com/" target="_blank" rel="noreferrer">StackBlitz</a>: <a class="header-anchor" href="#eric-simons-ceo-of-stackblitz" aria-label="Permalink to &quot;[Eric Simons](https://twitter.com/ericsimons40/status/1766525300584947999), CEO of [StackBlitz](https://stackblitz.com/):&quot;">â€‹</a></h4><blockquote><p>Oxc is slept on rn</p><p>Most JS/TS toolchains will be using it within the next few yrs imo</p></blockquote><h4 id="miles-johnson-creator-of-moonrepo" tabindex="-1"><a href="https://x.com/mileswjohnson/status/1734698340791800283" target="_blank" rel="noreferrer">Miles Johnson</a>, creator of <a href="https://moonrepo.dev" target="_blank" rel="noreferrer">Moonrepo</a>: <a class="header-anchor" href="#miles-johnson-creator-of-moonrepo" aria-label="Permalink to &quot;[Miles Johnson](https://x.com/mileswjohnson/status/1734698340791800283), creator of [Moonrepo](https://moonrepo.dev):&quot;">â€‹</a></h4><blockquote><p>It&#39;s crazy how good oxlint (and oxc tools) is. Not just in performance, but ease of use. Banking on Rust was a good choice!</p></blockquote><h4 id="joe-savona-react-team-member" tabindex="-1"><a href="https://x.com/en_JS/status/1676467920334094336" target="_blank" rel="noreferrer">Joe Savona</a>, <a href="https://react.dev" target="_blank" rel="noreferrer">React</a> team member: <a class="header-anchor" href="#joe-savona-react-team-member" aria-label="Permalink to &quot;[Joe Savona](https://x.com/en_JS/status/1676467920334094336), [React](https://react.dev) team member:&quot;">â€‹</a></h4><blockquote><p>Forâ€¦reasons I am experimenting w various Rust-based JS compilers. I donâ€™t agree w every design decision but overall oxc is really well done.</p></blockquote><h4 id="sathya-gunasekaran-react-team-member" tabindex="-1"><a href="https://x.com/_gsathya/status/1676453430263701506" target="_blank" rel="noreferrer">Sathya Gunasekaran</a>, <a href="https://react.dev" target="_blank" rel="noreferrer">React</a> team member: <a class="header-anchor" href="#sathya-gunasekaran-react-team-member" aria-label="Permalink to &quot;[Sathya Gunasekaran](https://x.com/_gsathya/status/1676453430263701506), [React](https://react.dev) team member:&quot;">â€‹</a></h4><blockquote><p>oxc is kinda neat</p></blockquote><h2 id="special-thanks" tabindex="-1">Special Thanks <a class="header-anchor" href="#special-thanks" aria-label="Permalink to &quot;Special Thanks&quot;">â€‹</a></h2><ul><li><a href="https://biomejs.dev" target="_blank" rel="noreferrer">Biome</a> and <a href="https://beta.ruff.rs" target="_blank" rel="noreferrer">Ruff</a>: This project would not exist without the help, inspiration, and encouragement from these two projects, who are pioneers in the field of Rust-based unified toolchains.</li><li><a href="https://quick-lint-js.com/" target="_blank" rel="noreferrer">quick-lint-js</a> and <a href="https://package.elm-lang.org/packages/jfmengels/elm-review/latest/" target="_blank" rel="noreferrer">elm-review</a>: For educating how static analysis could be improved in both performance and usability.</li></ul>',23),s=[n];function i(l,c,h,p,u,d){return a(),t("div",null,s)}const b=e(o,[["render",i]]);export{f as __pageData,b as default};
