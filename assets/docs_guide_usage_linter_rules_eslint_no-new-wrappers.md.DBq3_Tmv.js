import{_ as s,c as i,j as a,a as e,I as n,a4 as r,o,E as l}from"./chunks/framework.D6UG3LSr.js";const y=JSON.parse('{"title":"eslint/no-new-wrappers","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-new-wrappers.md","filePath":"docs/guide/usage/linter/rules/eslint/no-new-wrappers.md"}'),p={name:"docs/guide/usage/linter/rules/eslint/no-new-wrappers.md"},h={id:"eslint-no-new-wrappers",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#eslint-no-new-wrappers","aria-label":'Permalink to "eslint/no-new-wrappers <Badge type="info" text="Pedantic" />"'},"​",-1),c=r('<div class="rule-meta"></div><h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Disallow new operators with the String, Number, and Boolean objects</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>The first problem is that primitive wrapper objects are, in fact, objects. That means typeof will return &quot;object&quot; instead of &quot;string&quot;, &quot;number&quot;, or &quot;boolean&quot;. The second problem comes with boolean objects. Every object is truthy, that means an instance of Boolean always resolves to true even when its actual value is false. <a href="https://eslint.org/docs/latest/rules/no-new-wrappers" target="_blank" rel="noreferrer">https://eslint.org/docs/latest/rules/no-new-wrappers</a></p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stringObject </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>',7);function u(w,k,_,b,g,m){const t=l("Badge");return o(),i("div",null,[a("h1",h,[e("eslint/no-new-wrappers "),n(t,{type:"info",text:"Pedantic"}),e(),d]),c])}const E=s(p,[["render",u]]);export{y as __pageData,E as default};
