import{_ as l,c as h,j as a,a as e,G as i,w as o,a2 as c,B as t,o as p}from"./chunks/framework.Cm5JpC29.js";const w=JSON.parse('{"title":"unicorn/switch-case-braces","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/switch-case-braces.md","filePath":"docs/guide/usage/linter/rules/unicorn/switch-case-braces.md"}'),d={name:"docs/guide/usage/linter/rules/unicorn/switch-case-braces.md"},k={id:"unicorn-switch-case-braces",tabindex:"-1"},u={class:"rule-meta"};function b(E,s,g,f,m,y){const n=t("Badge"),r=t("Alert");return p(),h("div",null,[a("h1",k,[s[0]||(s[0]=e("unicorn/switch-case-braces ")),i(n,{type:"info",text:"Style"}),s[1]||(s[1]=e()),s[2]||(s[2]=a("a",{class:"header-anchor",href:"#unicorn-switch-case-braces","aria-label":'Permalink to "unicorn/switch-case-braces <Badge type="info" text="Style" />"'},"‚Äã",-1))]),a("div",u,[i(r,{class:"fix",type:"info"},{default:o(()=>s[3]||(s[3]=[a("span",{class:"emoji"},"üõ†Ô∏è",-1),e(" An auto-fix is available for this rule. ")])),_:1})]),s[4]||(s[4]=c(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">‚Äã</a></h3><p>Require empty switch cases to not have braces. Non-empty braces are required to have braces around them.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">‚Äã</a></h3><p>There is less visual clutter for empty cases and proper scope for non-empty cases.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">‚Äã</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (num) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Case 2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    break</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">‚Äã</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/45ef3eb2becc663e756a3da557df5a03fb40fd84/crates/oxc_linter/src/rules/unicorn/switch_case_braces.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,8))])}const v=l(d,[["render",b]]);export{w as __pageData,v as default};
