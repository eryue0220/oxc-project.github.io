import{_ as o,c as p,j as s,a as t,I as i,w as r,a4 as h,E as e,o as l}from"./chunks/framework.D6UG3LSr.js";const v=JSON.parse('{"title":"typescript/consistent-type-imports","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/typescript/consistent-type-imports.md","filePath":"docs/guide/usage/linter/rules/typescript/consistent-type-imports.md"}'),d={name:"docs/guide/usage/linter/rules/typescript/consistent-type-imports.md"},c={id:"typescript-consistent-type-imports",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#typescript-consistent-type-imports","aria-label":'Permalink to "typescript/consistent-type-imports <Badge type="info" text="Nursery" />"'},"‚Äã",-1),y={class:"rule-meta"},m=s("span",{class:"emoji"},"üõ†Ô∏è",-1),u=h(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">‚Äã</a></h3><p>Enforce consistent usage of type imports.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">‚Äã</a></h3><p>inconsistent usage of type imports can make the code harder to read and understand.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">‚Äã</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Foo } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,6);function _(g,E,f,F,b,x){const a=e("Badge"),n=e("Alert");return l(),p("div",null,[s("h1",c,[t("typescript/consistent-type-imports "),i(a,{type:"info",text:"Nursery"}),t(),k]),s("div",y,[i(n,{class:"fix",type:"info"},{default:r(()=>[m,t(" An auto-fix is available for this rule for some violations. ")]),_:1})]),u])}const B=o(d,[["render",_]]);export{v as __pageData,B as default};
