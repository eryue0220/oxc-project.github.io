import{_ as h,c as l,j as s,a as i,I as a,w as t,a4 as r,E as n,o as p}from"./chunks/framework.D6UG3LSr.js";const v=JSON.parse('{"title":"oxc/missing-throw","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/oxc/missing-throw.md","filePath":"docs/guide/usage/linter/rules/oxc/missing-throw.md"}'),c={name:"docs/guide/usage/linter/rules/oxc/missing-throw.md"},d={id:"oxc-missing-throw",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#oxc-missing-throw","aria-label":'Permalink to "oxc/missing-throw <Badge type="info" text="Correctness" />"'},"â€‹",-1),g={class:"rule-meta"},_=s("span",{class:"emoji"},"âœ…",-1),E=s("span",{class:"emoji"},"ðŸ’¡",-1),m=r(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">â€‹</a></h3><p>Checks whether the <code>throw</code> keyword is missing in front of a <code>new</code> expression.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">â€‹</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  throw</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div>`,4);function u(f,x,y,w,F,b){const o=n("Badge"),e=n("Alert");return p(),l("div",null,[s("h1",d,[i("oxc/missing-throw "),a(o,{type:"info",text:"Correctness"}),i(),k]),s("div",g,[a(e,{class:"default-on",type:"success"},{default:t(()=>[_,i(" This rule is turned on by default. ")]),_:1}),a(e,{class:"fix",type:"info"},{default:t(()=>[E,i(" A suggestion is available for this rule. ")]),_:1})]),m])}const A=h(c,[["render",u]]);export{v as __pageData,A as default};
