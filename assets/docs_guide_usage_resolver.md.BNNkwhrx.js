import{_ as r,c as t,I as o,j as e,a as s,a3 as l,o as n,E as c}from"./chunks/framework.Bg3dKMxI.js";const k=JSON.parse('{"title":"Resolver","description":"","frontmatter":{"title":"Resolver","outline":"deep","badges":[{"src":"https://img.shields.io/crates/d/oxc_resolver","alt":"total downloads from crates.io"}]},"headers":[],"relativePath":"docs/guide/usage/resolver.md","filePath":"docs/guide/usage/resolver.md"}'),i={name:"docs/guide/usage/resolver.md"},d=e("h1",{id:"resolver",tabindex:"-1"},[s("Resolver "),e("a",{class:"header-anchor",href:"#resolver","aria-label":'Permalink to "Resolver"'},"​")],-1),h=l('<p>Node.js cjs and esm path resolution.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>All configurations are aligned with <a href="https://github.com/webpack/enhanced-resolve" target="_blank" rel="noreferrer">webpack/enhanced-resolve</a>.</li><li>28x faster than <a href="https://github.com/webpack/enhanced-resolve" target="_blank" rel="noreferrer">webpack/enhanced-resolve</a> (<a href="https://github.com/oxc-project/bench-nodejs-resolver" target="_blank" rel="noreferrer">benchmark</a>).</li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><h3 id="rust" tabindex="-1">Rust <a class="header-anchor" href="#rust" aria-label="Permalink to &quot;Rust&quot;">​</a></h3><p>See <a href="https://crates.io/crates/oxc_resolver" target="_blank" rel="noreferrer">https://crates.io/crates/oxc_resolver</a> and its documentation <a href="https://docs.rs/oxc_resolver" target="_blank" rel="noreferrer">https://docs.rs/oxc_resolver</a>.</p><h3 id="node-js" tabindex="-1">Node.js <a class="header-anchor" href="#node-js" aria-label="Permalink to &quot;Node.js&quot;">​</a></h3><p>The node binding <a href="https://www.npmjs.com/package/oxc-resolver" target="_blank" rel="noreferrer">oxc-resolver</a> is currently work in progress.</p>',8);function p(_,u,f,b,m,g){const a=c("AppBadgeList");return n(),t("div",null,[d,o(a),h])}const x=r(i,[["render",p]]);export{k as __pageData,x as default};
