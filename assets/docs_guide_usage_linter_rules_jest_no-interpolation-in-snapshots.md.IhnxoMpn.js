import{_ as e,c as t,j as a,a as i,G as l,a3 as p,B as h,o as r}from"./chunks/framework.CP16cIa8.js";const m=JSON.parse('{"title":"jest/no-interpolation-in-snapshots","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/jest/no-interpolation-in-snapshots.md","filePath":"docs/guide/usage/linter/rules/jest/no-interpolation-in-snapshots.md"}'),o={name:"docs/guide/usage/linter/rules/jest/no-interpolation-in-snapshots.md"},k={id:"jest-no-interpolation-in-snapshots",tabindex:"-1"};function d(E,s,c,g,y,F){const n=h("Badge");return r(),t("div",null,[a("h1",k,[s[0]||(s[0]=i("jest/no-interpolation-in-snapshots ")),l(n,{type:"info",text:"Style"}),s[1]||(s[1]=i()),s[2]||(s[2]=a("a",{class:"header-anchor",href:"#jest-no-interpolation-in-snapshots","aria-label":'Permalink to "jest/no-interpolation-in-snapshots <Badge type="info" text="Style" />"'},"​",-1))]),s[3]||(s[3]=p(`<div class="rule-meta"></div><h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Prevents the use of string interpolations in snapshots.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>Interpolation prevents snapshots from being updated. Instead, properties should be overloaded with a matcher by using <a href="https://jestjs.io/docs/en/snapshot-testing#property-matchers" target="_blank" rel="noreferrer">property matchers</a>.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(something).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toMatchInlineSnapshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \`Object {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    property: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">interpolated</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  }\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(something).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toMatchInlineSnapshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { other: expect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Number) },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \`Object {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    other: Any&lt;Number&gt;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    property: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">interpolated</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  }\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(errorThrowingFunction).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toThrowErrorMatchingInlineSnapshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">interpolated</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/jest/no_interpolation_in_snapshots.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,9))])}const b=e(o,[["render",d]]);export{m as __pageData,b as default};
