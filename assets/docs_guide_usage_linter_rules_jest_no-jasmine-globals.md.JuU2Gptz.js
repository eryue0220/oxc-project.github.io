import{_ as o,c as r,j as a,a as i,G as e,w as h,a2 as p,B as t,o as k}from"./chunks/framework.8qdJL5ht.js";const F=JSON.parse('{"title":"jest/no-jasmine-globals","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/jest/no-jasmine-globals.md","filePath":"docs/guide/usage/linter/rules/jest/no-jasmine-globals.md"}'),d={name:"docs/guide/usage/linter/rules/jest/no-jasmine-globals.md"},E={id:"jest-no-jasmine-globals",tabindex:"-1"},g={class:"rule-meta"};function c(m,s,u,y,b,f){const n=t("Badge"),l=t("Alert");return k(),r("div",null,[a("h1",E,[s[0]||(s[0]=i("jest/no-jasmine-globals ")),e(n,{type:"info",text:"Style"}),s[1]||(s[1]=i()),s[2]||(s[2]=a("a",{class:"header-anchor",href:"#jest-no-jasmine-globals","aria-label":'Permalink to "jest/no-jasmine-globals <Badge type="info" text="Style" />"'},"‚Äã",-1))]),a("div",g,[e(l,{class:"fix",type:"info"},{default:h(()=>s[3]||(s[3]=[a("span",{class:"emoji"},"üõ†Ô∏è",-1),i(" An auto-fix is available for this rule for some violations. ")])),_:1})]),s[4]||(s[4]=p(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">‚Äã</a></h3><p>This rule reports on any usage of Jasmine globals, which is not ported to Jest, and suggests alternatives from Jest&#39;s own API.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">‚Äã</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jasmine.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DEFAULT_TIMEOUT_INTERVAL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  pending</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  jasmine.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSpy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">‚Äã</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/jest/no_jasmine_globals.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,6))])}const x=o(d,[["render",c]]);export{F as __pageData,x as default};
