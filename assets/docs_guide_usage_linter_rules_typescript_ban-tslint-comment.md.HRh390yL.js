import{_ as o,c as l,j as t,a as e,I as a,w as c,a4 as r,E as s,o as d}from"./chunks/framework.D6UG3LSr.js";const E=JSON.parse('{"title":"typescript/ban-tslint-comment","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/typescript/ban-tslint-comment.md","filePath":"docs/guide/usage/linter/rules/typescript/ban-tslint-comment.md"}'),h={name:"docs/guide/usage/linter/rules/typescript/ban-tslint-comment.md"},p={id:"typescript-ban-tslint-comment",tabindex:"-1"},m=t("a",{class:"header-anchor",href:"#typescript-ban-tslint-comment","aria-label":'Permalink to "typescript/ban-tslint-comment <Badge type="info" text="Style" />"'},"​",-1),_={class:"rule-meta"},u=t("span",{class:"emoji"},"🛠️",-1),b=r(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>This rule disallows <code>tslint:&lt;rule-flag&gt;</code> comments</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>Useful when migrating from TSLint to ESLint. Once TSLint has been removed, this rule helps locate TSLint annotations</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// tslint:disable-next-line</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">someCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div>`,6);function g(f,y,x,k,T,v){const i=s("Badge"),n=s("Alert");return d(),l("div",null,[t("h1",p,[e("typescript/ban-tslint-comment "),a(i,{type:"info",text:"Style"}),e(),m]),t("div",_,[a(n,{class:"fix",type:"info"},{default:c(()=>[u,e(" An auto-fix is available for this rule. ")]),_:1})]),b])}const C=o(h,[["render",g]]);export{E as __pageData,C as default};
