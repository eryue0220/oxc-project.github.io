import{_ as l,c as d,j as a,a as s,G as t,w as n,a2 as p,B as o,o as h}from"./chunks/framework.DlAqvapY.js";const _=JSON.parse('{"title":"eslint/no-compare-neg-zero","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-compare-neg-zero.md","filePath":"docs/guide/usage/linter/rules/eslint/no-compare-neg-zero.md"}'),c={name:"docs/guide/usage/linter/rules/eslint/no-compare-neg-zero.md"},u={id:"eslint-no-compare-neg-zero",tabindex:"-1"},g={class:"rule-meta"};function m(k,e,f,b,x,y){const r=o("Badge"),i=o("Alert");return h(),d("div",null,[a("h1",u,[e[0]||(e[0]=s("eslint/no-compare-neg-zero ")),t(r,{type:"info",text:"Correctness"}),e[1]||(e[1]=s()),e[2]||(e[2]=a("a",{class:"header-anchor",href:"#eslint-no-compare-neg-zero","aria-label":'Permalink to "eslint/no-compare-neg-zero <Badge type="info" text="Correctness" />"'},"​",-1))]),a("div",g,[t(i,{class:"default-on",type:"success"},{default:n(()=>e[3]||(e[3]=[a("span",{class:"emoji"},"✅",-1),s(" This rule is turned on by default. ")])),_:1}),t(i,{class:"fix",type:"info"},{default:n(()=>e[4]||(e[4]=[a("span",{class:"emoji"},"🛠️💡",-1),s(" An auto-fix and a suggestion are available for this rule for some violations. ")])),_:1})]),e[5]||(e[5]=p(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Disallow comparing against -0</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>The rule should warn against code that tries to compare against -0, since that will not work as intended. That is, code like x === -0 will pass for both +0 and -0. The author probably intended Object.is(x, -0).</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/eslint/no_compare_neg_zero.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,8))])}const v=l(c,[["render",m]]);export{_ as __pageData,v as default};
