import{_ as l,c as o,j as s,a,I as e,w as c,a4 as h,E as i,o as r}from"./chunks/framework.D6UG3LSr.js";const q=JSON.parse('{"title":"eslint/no-nonoctal-decimal-escape","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-nonoctal-decimal-escape.md","filePath":"docs/guide/usage/linter/rules/eslint/no-nonoctal-decimal-escape.md"}'),d={name:"docs/guide/usage/linter/rules/eslint/no-nonoctal-decimal-escape.md"},p={id:"eslint-no-nonoctal-decimal-escape",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#eslint-no-nonoctal-decimal-escape","aria-label":'Permalink to "eslint/no-nonoctal-decimal-escape <Badge type="info" text="Correctness" />"'},"​",-1),E={class:"rule-meta"},u=s("span",{class:"emoji"},"✅",-1),_=h(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>This rule disallows \\8 and \\9 escape sequences in string literals</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>ECMAScript specification treats \\8 and \\9 in string literals as a legacy feature</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">incorrect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;9&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">correct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">9&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,6);function g(m,y,F,f,b,C){const t=i("Badge"),n=i("Alert");return r(),o("div",null,[s("h1",p,[a("eslint/no-nonoctal-decimal-escape "),e(t,{type:"info",text:"Correctness"}),a(),k]),s("div",E,[e(n,{class:"default-on",type:"success"},{default:c(()=>[u,a(" This rule is turned on by default. ")]),_:1})]),_])}const B=l(d,[["render",g]]);export{q as __pageData,B as default};
