import{_ as l,c as o,j as e,a as s,I as a,w as h,a4 as r,E as i,o as d}from"./chunks/framework.D6UG3LSr.js";const A=JSON.parse('{"title":"eslint/eqeqeq","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/eqeqeq.md","filePath":"docs/guide/usage/linter/rules/eslint/eqeqeq.md"}'),p={name:"docs/guide/usage/linter/rules/eslint/eqeqeq.md"},c={id:"eslint-eqeqeq",tabindex:"-1"},k=e("a",{class:"header-anchor",href:"#eslint-eqeqeq","aria-label":'Permalink to "eslint/eqeqeq <Badge type="info" text="Pedantic" />"'},"​",-1),_={class:"rule-meta"},q=e("span",{class:"emoji"},"🛠️",-1),u=r(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Requires the use of the === and !== operators</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>Using non-strict equality operators leads to hard to track bugs due to type coercion.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b;</span></span></code></pre></div>`,6);function g(E,m,y,f,b,x){const t=i("Badge"),n=i("Alert");return d(),o("div",null,[e("h1",c,[s("eslint/eqeqeq "),a(t,{type:"info",text:"Pedantic"}),s(),k]),e("div",_,[a(n,{class:"fix",type:"info"},{default:h(()=>[q,s(" An auto-fix is available for this rule for some violations. ")]),_:1})]),u])}const P=l(p,[["render",g]]);export{A as __pageData,P as default};
