import{_ as n,c as l,j as a,a as s,G as i,w as p,a3 as d,B as t,o as c}from"./chunks/framework.BJhF9nxw.js";const q=JSON.parse('{"title":"oxc/bad-comparison-sequence","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/oxc/bad-comparison-sequence.md","filePath":"docs/guide/usage/linter/rules/oxc/bad-comparison-sequence.md"}'),h={name:"docs/guide/usage/linter/rules/oxc/bad-comparison-sequence.md"},u={id:"oxc-bad-comparison-sequence",tabindex:"-1"},m={class:"rule-meta"};function k(b,e,E,g,x,f){const o=t("Badge"),r=t("Alert");return c(),l("div",null,[a("h1",u,[e[0]||(e[0]=s("oxc/bad-comparison-sequence ")),i(o,{type:"info",text:"Correctness"}),e[1]||(e[1]=s()),e[2]||(e[2]=a("a",{class:"header-anchor",href:"#oxc-bad-comparison-sequence","aria-label":'Permalink to "oxc/bad-comparison-sequence <Badge type="info" text="Correctness" />"'},"​",-1))]),a("div",m,[i(r,{class:"default-on",type:"success"},{default:p(()=>e[3]||(e[3]=[a("span",{class:"emoji"},"✅",-1),s(" This rule is turned on by default. ")])),_:1})]),e[4]||(e[4]=d(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>This rule applies when the comparison operator is applied two or more times in a row.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>Because comparison operator is a binary operator, it is impossible to compare three or more operands at once. If comparison operator is used to compare three or more operands, only the first two operands are compared and the rest is compared with its result of boolean type.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ((a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a, b, and c are the same&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/oxc/bad_comparison_sequence.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,8))])}const _=n(h,[["render",k]]);export{q as __pageData,_ as default};
