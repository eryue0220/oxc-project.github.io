import{_ as o,c as l,j as s,a as e,I as t,w as r,a4 as p,E as a,o as h}from"./chunks/framework.D6UG3LSr.js";const C=JSON.parse('{"title":"typescript/ban-ts-comment","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/typescript/ban-ts-comment.md","filePath":"docs/guide/usage/linter/rules/typescript/ban-ts-comment.md"}'),c={name:"docs/guide/usage/linter/rules/typescript/ban-ts-comment.md"},d={id:"typescript-ban-ts-comment",tabindex:"-1"},m=s("a",{class:"header-anchor",href:"#typescript-ban-ts-comment","aria-label":'Permalink to "typescript/ban-ts-comment <Badge type="info" text="Pedantic" />"'},"‚Äã",-1),k={class:"rule-meta"},_=s("span",{class:"emoji"},"üõ†Ô∏è",-1),u=p(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">‚Äã</a></h3><p>This rule lets you set which directive comments you want to allow in your codebase.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">‚Äã</a></h3><p>Using TypeScript directives to suppress TypeScript compiler errors reduces the effectiveness of TypeScript overall.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">‚Äã</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // @ts-ignore: Unreachable code error</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,6);function y(g,E,b,f,x,v){const i=a("Badge"),n=a("Alert");return h(),l("div",null,[s("h1",d,[e("typescript/ban-ts-comment "),t(i,{type:"info",text:"Pedantic"}),e(),m]),s("div",k,[t(n,{class:"fix",type:"info"},{default:r(()=>[_,e(" An auto-fix is available for this rule for some violations. ")]),_:1})]),u])}const P=o(c,[["render",y]]);export{C as __pageData,P as default};
