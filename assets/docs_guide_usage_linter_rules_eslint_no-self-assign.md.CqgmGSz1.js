import{_ as o,c as r,j as s,a,G as t,w as d,a2 as h,B as i,o as c}from"./chunks/framework.Cm5JpC29.js";const _=JSON.parse('{"title":"eslint/no-self-assign","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-self-assign.md","filePath":"docs/guide/usage/linter/rules/eslint/no-self-assign.md"}'),p={name:"docs/guide/usage/linter/rules/eslint/no-self-assign.md"},u={id:"eslint-no-self-assign",tabindex:"-1"},f={class:"rule-meta"};function g(b,e,m,k,x,y){const n=i("Badge"),l=i("Alert");return c(),r("div",null,[s("h1",u,[e[0]||(e[0]=a("eslint/no-self-assign ")),t(n,{type:"info",text:"Correctness"}),e[1]||(e[1]=a()),e[2]||(e[2]=s("a",{class:"header-anchor",href:"#eslint-no-self-assign","aria-label":'Permalink to "eslint/no-self-assign <Badge type="info" text="Correctness" />"'},"​",-1))]),s("div",f,[t(l,{class:"default-on",type:"success"},{default:d(()=>e[3]||(e[3]=[s("span",{class:"emoji"},"✅",-1),a(" This rule is turned on by default. ")])),_:1})]),e[4]||(e[4]=h(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Disallow assignments where both sides are exactly the same</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>Self assignments have no effect, so probably those are an error due to incomplete refactoring. Those indicate that what you should do is still remaining.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[bar, baz] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [bar, qiz];</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/36ebb3e7841818c238c44349d6cf859db4177d55/crates/oxc_linter/src/rules/eslint/no_self_assign.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,8))])}const v=o(p,[["render",g]]);export{_ as __pageData,v as default};
