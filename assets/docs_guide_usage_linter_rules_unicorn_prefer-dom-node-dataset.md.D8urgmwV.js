import{_ as s,c as i,j as a,a as e,I as n,a4 as o,o as d,E as r}from"./chunks/framework.D6UG3LSr.js";const y=JSON.parse('{"title":"unicorn/prefer-dom-node-dataset","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/prefer-dom-node-dataset.md","filePath":"docs/guide/usage/linter/rules/unicorn/prefer-dom-node-dataset.md"}'),l={name:"docs/guide/usage/linter/rules/unicorn/prefer-dom-node-dataset.md"},h={id:"unicorn-prefer-dom-node-dataset",tabindex:"-1"},c=a("a",{class:"header-anchor",href:"#unicorn-prefer-dom-node-dataset","aria-label":'Permalink to "unicorn/prefer-dom-node-dataset <Badge type="info" text="Pedantic" />"'},"â€‹",-1),p=o(`<div class="rule-meta"></div><h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">â€‹</a></h3><p>Use <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset" target="_blank" rel="noreferrer"><code>.dataset</code></a> on DOM elements over <code>getAttribute(â€¦)</code>, <code>.setAttribute(â€¦)</code>, <code>.removeAttribute(â€¦)</code> and <code>.hasAttribute(â€¦)</code>.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">â€‹</a></h3><p>The <code>dataset</code> property is a map of strings that contains all the <code>data-*</code> attributes from the element. It is a convenient way to access all of them at once.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">â€‹</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Bad</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data-unicorn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ðŸ¦„&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Good</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element.dataset.unicorn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ðŸ¦„&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>`,7);function k(u,m,g,E,_,f){const t=r("Badge");return d(),i("div",null,[a("h1",h,[e("unicorn/prefer-dom-node-dataset "),n(t,{type:"info",text:"Pedantic"}),e(),c]),p])}const v=s(l,[["render",k]]);export{y as __pageData,v as default};
