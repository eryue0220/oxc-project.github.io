import{_ as h,c as p,j as s,a as i,I as a,w as l,a4 as r,E as t,o as k}from"./chunks/framework.D6UG3LSr.js";const A=JSON.parse('{"title":"unicorn/prefer-prototype-methods","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/prefer-prototype-methods.md","filePath":"docs/guide/usage/linter/rules/unicorn/prefer-prototype-methods.md"}'),o={name:"docs/guide/usage/linter/rules/unicorn/prefer-prototype-methods.md"},d={id:"unicorn-prefer-prototype-methods",tabindex:"-1"},c=s("a",{class:"header-anchor",href:"#unicorn-prefer-prototype-methods","aria-label":'Permalink to "unicorn/prefer-prototype-methods <Badge type="info" text="Pedantic" />"'},"​",-1),y={class:"rule-meta"},E=s("span",{class:"emoji"},"🛠️",-1),g=r("",6);function F(f,m,u,_,C,b){const e=t("Badge"),n=t("Alert");return k(),p("div",null,[s("h1",d,[i("unicorn/prefer-prototype-methods "),a(e,{type:"info",text:"Pedantic"}),i(),c]),s("div",y,[a(n,{class:"fix",type:"info"},{default:l(()=>[E,i(" An auto-fix is available for this rule. ")]),_:1})]),g])}const x=h(o,[["render",F]]);export{A as __pageData,x as default};
