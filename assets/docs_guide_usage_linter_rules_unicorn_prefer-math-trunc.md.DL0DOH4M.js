import{_ as s,c as i,j as a,a as e,I as r,a4 as n,o,E as l}from"./chunks/framework.D6UG3LSr.js";const y=JSON.parse('{"title":"unicorn/prefer-math-trunc","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/prefer-math-trunc.md","filePath":"docs/guide/usage/linter/rules/unicorn/prefer-math-trunc.md"}'),h={name:"docs/guide/usage/linter/rules/unicorn/prefer-math-trunc.md"},c={id:"unicorn-prefer-math-trunc",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#unicorn-prefer-math-trunc","aria-label":'Permalink to "unicorn/prefer-math-trunc <Badge type="info" text="Pedantic" />"'},"​",-1),p=n(`<div class="rule-meta"></div><h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Prefers use of <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc" target="_blank" rel="noreferrer"><code>Math.trunc()</code></a> instead of bitwise operations for clarity and more reliable results.</p><p>It prevents the use of the following bitwise operations:</p><ul><li><code>x | 0</code> (<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_OR" target="_blank" rel="noreferrer"><code>bitwise OR</code></a> with 0)</li><li><code>~~x</code> (two <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT" target="_blank" rel="noreferrer"><code>bitwise NOT</code></a>)</li><li><code>x &gt;&gt; 0</code> (<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Right_shift" target="_blank" rel="noreferrer"><code>Signed Right Shift</code></a> with 0)</li><li><code>x &lt;&lt; 0</code> (<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Left_shift" target="_blank" rel="noreferrer"><code>Left Shift</code></a> with 0)</li><li><code>x ^ 0</code> (<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR" target="_blank" rel="noreferrer"><code>bitwise XOR Shift</code></a> with 0)</li></ul><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>Using bitwise operations to truncate numbers is not clear and do not work in <a href="https://stackoverflow.com/a/34706108/11687747" target="_blank" rel="noreferrer">some cases</a>.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Bad</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Good</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trunc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,9);function k(f,g,u,_,b,m){const t=l("Badge");return o(),i("div",null,[a("h1",c,[e("unicorn/prefer-math-trunc "),r(t,{type:"info",text:"Pedantic"}),e(),d]),p])}const w=s(h,[["render",k]]);export{y as __pageData,w as default};
