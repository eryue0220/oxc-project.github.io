import{_ as l,c as h,j as s,a as e,I as a,w as r,a4 as o,E as i,o as p}from"./chunks/framework.D6UG3LSr.js";const B=JSON.parse('{"title":"eslint/no-this-before-super","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-this-before-super.md","filePath":"docs/guide/usage/linter/rules/eslint/no-this-before-super.md"}'),d={name:"docs/guide/usage/linter/rules/eslint/no-this-before-super.md"},c={id:"eslint-no-this-before-super",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#eslint-no-this-before-super","aria-label":'Permalink to "eslint/no-this-before-super <Badge type="info" text="Correctness" />"'},"​",-1),u={class:"rule-meta"},_=s("span",{class:"emoji"},"✅",-1),g=o("",6);function E(b,y,f,m,x,C){const t=i("Badge"),n=i("Alert");return p(),h("div",null,[s("h1",c,[e("eslint/no-this-before-super "),a(t,{type:"info",text:"Correctness"}),e(),k]),s("div",u,[a(n,{class:"default-on",type:"success"},{default:r(()=>[_,e(" This rule is turned on by default. ")]),_:1})]),g])}const v=l(d,[["render",E]]);export{B as __pageData,v as default};
