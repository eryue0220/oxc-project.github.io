import{_ as t,c as i,j as a,a as e,I as n,a4 as h,o,E as d}from"./chunks/framework.D6UG3LSr.js";const b=JSON.parse('{"title":"jsx_a11y/heading-has-content","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/jsx_a11y/heading-has-content.md","filePath":"docs/guide/usage/linter/rules/jsx_a11y/heading-has-content.md"}'),r={name:"docs/guide/usage/linter/rules/jsx_a11y/heading-has-content.md"},l={id:"jsx-a11y-heading-has-content",tabindex:"-1"},c=a("a",{class:"header-anchor",href:"#jsx-a11y-heading-has-content","aria-label":'Permalink to "jsx_a11y/heading-has-content <Badge type="info" text="Correctness" />"'},"​",-1),p=h(`<div class="rule-meta"></div><h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Enforce that heading elements (h1, h2, etc.) have content and that the content is accessible to screen readers. Accessible means that it is not hidden using the aria-hidden prop.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>Screen readers alert users to the presence of a heading tag. If the heading is empty or the text cannot be accessed, this could either confuse users or even prevent them from accessing information on the page&#39;s structure.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Bad</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Good</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Foo&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,7);function g(k,_,u,E,m,y){const s=d("Badge");return o(),i("div",null,[a("h1",l,[e("jsx_a11y/heading-has-content "),n(s,{type:"info",text:"Correctness"}),e(),c]),p])}const f=t(r,[["render",g]]);export{b as __pageData,f as default};
