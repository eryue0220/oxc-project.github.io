import{_ as s,c as i,o as a,a3 as e}from"./chunks/framework.Bg3dKMxI.js";const u=JSON.parse('{"title":"Debugging","description":"","frontmatter":{"title":"Debugging","outline":"deep"},"headers":[],"relativePath":"docs/contribute/debugging.md","filePath":"docs/contribute/debugging.md"}'),t={name:"docs/contribute/debugging.md"},n=e(`<h1 id="debugging" tabindex="-1">Debugging <a class="header-anchor" href="#debugging" aria-label="Permalink to &quot;Debugging&quot;">​</a></h1><h2 id="rust-lldb" tabindex="-1">rust-lldb <a class="header-anchor" href="#rust-lldb" aria-label="Permalink to &quot;rust-lldb&quot;">​</a></h2><p>rust-lldb can be used to get panic information from debug builds.</p><p>Enable debug symbols:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">profile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">release</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">debug = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">strip = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">panic = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;unwind&quot;</span></span></code></pre></div><p>Build the binary:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --features</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> allocator</span></span></code></pre></div><p>Run the binary:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rust-lldb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./target/release/oxlint</span></span></code></pre></div><p>Once it launches, press <code>r</code> for running the program.</p>`,10),l=[n];function p(h,d,r,o,g,k){return a(),i("div",null,l)}const b=s(t,[["render",p]]);export{u as __pageData,b as default};
