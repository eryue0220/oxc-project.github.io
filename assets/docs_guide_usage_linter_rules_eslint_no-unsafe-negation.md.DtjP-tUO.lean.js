import{_ as l,c as h,j as e,a,I as s,w as i,a4 as r,E as n,o as d}from"./chunks/framework.D6UG3LSr.js";const q=JSON.parse('{"title":"eslint/no-unsafe-negation","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-unsafe-negation.md","filePath":"docs/guide/usage/linter/rules/eslint/no-unsafe-negation.md"}'),c={name:"docs/guide/usage/linter/rules/eslint/no-unsafe-negation.md"},p={id:"eslint-no-unsafe-negation",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#eslint-no-unsafe-negation","aria-label":'Permalink to "eslint/no-unsafe-negation <Badge type="info" text="Correctness" />"'},"​",-1),k={class:"rule-meta"},_=e("span",{class:"emoji"},"✅",-1),g=e("span",{class:"emoji"},"🛠️",-1),f=r("",6);function m(y,b,E,x,v,A){const o=n("Badge"),t=n("Alert");return d(),h("div",null,[e("h1",p,[a("eslint/no-unsafe-negation "),s(o,{type:"info",text:"Correctness"}),a(),u]),e("div",k,[s(t,{class:"default-on",type:"success"},{default:i(()=>[_,a(" This rule is turned on by default. ")]),_:1}),s(t,{class:"fix",type:"info"},{default:i(()=>[g,a(" An auto-fix is available for this rule. ")]),_:1})]),f])}const D=l(c,[["render",m]]);export{q as __pageData,D as default};
