import{_ as l,c as o,j as e,a as s,G as i,w as h,a3 as c,B as t,o as d}from"./chunks/framework.BJhF9nxw.js";const v=JSON.parse('{"title":"oxc/uninvoked-array-callback","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/oxc/uninvoked-array-callback.md","filePath":"docs/guide/usage/linter/rules/oxc/uninvoked-array-callback.md"}'),k={name:"docs/guide/usage/linter/rules/oxc/uninvoked-array-callback.md"},p={id:"oxc-uninvoked-array-callback",tabindex:"-1"},u={class:"rule-meta"};function y(b,a,g,m,f,x){const n=t("Badge"),r=t("Alert");return d(),o("div",null,[e("h1",p,[a[0]||(a[0]=s("oxc/uninvoked-array-callback ")),i(n,{type:"info",text:"Correctness"}),a[1]||(a[1]=s()),a[2]||(a[2]=e("a",{class:"header-anchor",href:"#oxc-uninvoked-array-callback","aria-label":'Permalink to "oxc/uninvoked-array-callback <Badge type="info" text="Correctness" />"'},"​",-1))]),e("div",u,[i(r,{class:"default-on",type:"success"},{default:h(()=>a[3]||(a[3]=[e("span",{class:"emoji"},"✅",-1),s(" This rule is turned on by default. ")])),_:1})]),a[4]||(a[4]=c('<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>This rule applies when an Array function has a callback argument used for an array with empty slots.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>When the Array constructor is called with a single number argument, an array with the specified number of empty slots (not actual undefined values) is constructed. If a callback function is passed to the function of this array, the callback function is never invoked because the array has no actual elements.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/oxc/uninvoked_array_callback.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>',8))])}const F=l(k,[["render",y]]);export{v as __pageData,F as default};
