import{_ as n,c as h,j as a,a as s,I as e,w as r,a4 as p,E as i,o}from"./chunks/framework.D6UG3LSr.js";const A=JSON.parse('{"title":"oxc/bad-replace-all-arg","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/oxc/bad-replace-all-arg.md","filePath":"docs/guide/usage/linter/rules/oxc/bad-replace-all-arg.md"}'),d={name:"docs/guide/usage/linter/rules/oxc/bad-replace-all-arg.md"},c={id:"oxc-bad-replace-all-arg",tabindex:"-1"},k=a("a",{class:"header-anchor",href:"#oxc-bad-replace-all-arg","aria-label":'Permalink to "oxc/bad-replace-all-arg <Badge type="info" text="Correctness" />"'},"​",-1),g={class:"rule-meta"},u=a("span",{class:"emoji"},"✅",-1),E=p(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>This rule warns when the <code>replaceAll</code> method is called with a regular expression that does not have the global flag (g).</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>The <code>replaceAll</code> method replaces all occurrences of a string with another string. If the global flag (g) is not used in the regular expression, only the first occurrence of the string will be replaced.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Bad: The global flag (g) is missing in the regular expression.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">withSpaces.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;,&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Good: The global flag (g) is used in the regular expression.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">withSpaces.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;,&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,6);function _(y,b,F,x,m,f){const t=i("Badge"),l=i("Alert");return o(),h("div",null,[a("h1",c,[s("oxc/bad-replace-all-arg "),e(t,{type:"info",text:"Correctness"}),s(),k]),a("div",g,[e(l,{class:"default-on",type:"success"},{default:r(()=>[u,s(" This rule is turned on by default. ")]),_:1})]),E])}const B=n(d,[["render",_]]);export{A as __pageData,B as default};
