import{_ as n,c as o,j as s,a,I as e,w as l,a4 as h,E as t,o as d}from"./chunks/framework.D6UG3LSr.js";const A=JSON.parse('{"title":"eslint/no-sparse-arrays","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-sparse-arrays.md","filePath":"docs/guide/usage/linter/rules/eslint/no-sparse-arrays.md"}'),p={name:"docs/guide/usage/linter/rules/eslint/no-sparse-arrays.md"},c={id:"eslint-no-sparse-arrays",tabindex:"-1"},u=s("a",{class:"header-anchor",href:"#eslint-no-sparse-arrays","aria-label":'Permalink to "eslint/no-sparse-arrays <Badge type="info" text="Correctness" />"'},"â€‹",-1),k={class:"rule-meta"},_=s("span",{class:"emoji"},"âœ…",-1),y=h("",6);function E(g,m,b,f,x,v){const i=t("Badge"),r=t("Alert");return d(),o("div",null,[s("h1",c,[a("eslint/no-sparse-arrays "),e(i,{type:"info",text:"Correctness"}),a(),u]),s("div",k,[e(r,{class:"default-on",type:"success"},{default:l(()=>[_,a(" This rule is turned on by default. ")]),_:1})]),y])}const C=n(p,[["render",E]]);export{A as __pageData,C as default};
