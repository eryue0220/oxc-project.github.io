import{_ as s,c as t,j as r,a,G as i,a2 as n,B as d,o as l}from"./chunks/framework.DlAqvapY.js";const b=JSON.parse('{"title":"unicorn/prefer-dom-node-remove","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/prefer-dom-node-remove.md","filePath":"docs/guide/usage/linter/rules/unicorn/prefer-dom-node-remove.md"}'),c={name:"docs/guide/usage/linter/rules/unicorn/prefer-dom-node-remove.md"},h={id:"unicorn-prefer-dom-node-remove",tabindex:"-1"};function p(m,e,u,f,v,g){const o=d("Badge");return l(),t("div",null,[r("h1",h,[e[0]||(e[0]=a("unicorn/prefer-dom-node-remove ")),i(o,{type:"info",text:"Pedantic"}),e[1]||(e[1]=a()),e[2]||(e[2]=r("a",{class:"header-anchor",href:"#unicorn-prefer-dom-node-remove","aria-label":'Permalink to "unicorn/prefer-dom-node-remove <Badge type="info" text="Pedantic" />"'},"​",-1))]),e[3]||(e[3]=n('<div class="rule-meta"></div><h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Prefers the use of <code>child.remove()</code> over <code>parentNode.removeChild(child)</code>.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>The DOM function <a href="https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove" target="_blank" rel="noreferrer"><code>Node#remove()</code></a> is preferred over the indirect removal of an object with <a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild" target="_blank" rel="noreferrer"><code>Node#removeChild()</code></a>.</p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><p>Examples of <strong>incorrect</strong> code for this rule:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parentNode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(childNode);</span></span></code></pre></div><p>Examples of <strong>correct</strong> code for this rule:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">childNode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/unicorn/prefer_dom_node_remove.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>',12))])}const x=s(c,[["render",p]]);export{b as __pageData,x as default};
