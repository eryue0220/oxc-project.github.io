import{_ as n,c as h,j as s,a,I as i,w as p,a4 as l,E as t,o as d}from"./chunks/framework.D6UG3LSr.js";const x=JSON.parse('{"title":"typescript/array-type","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/typescript/array-type.md","filePath":"docs/guide/usage/linter/rules/typescript/array-type.md"}'),o={name:"docs/guide/usage/linter/rules/typescript/array-type.md"},k={id:"typescript-array-type",tabindex:"-1"},c=s("a",{class:"header-anchor",href:"#typescript-array-type","aria-label":'Permalink to "typescript/array-type <Badge type="info" text="Style" />"'},"​",-1),y={class:"rule-meta"},g=s("span",{class:"emoji"},"🛠️",-1),_=l("",6);function u(E,m,F,b,C,f){const e=t("Badge"),r=t("Alert");return d(),h("div",null,[s("h1",k,[a("typescript/array-type "),i(e,{type:"info",text:"Style"}),a(),c]),s("div",y,[i(r,{class:"fix",type:"info"},{default:p(()=>[g,a(" An auto-fix is available for this rule. ")]),_:1})]),_])}const B=n(o,[["render",u]]);export{x as __pageData,B as default};
