import{_ as e,c as k,j as s,a as i,I as a,w as l,a4 as p,E as t,o as E}from"./chunks/framework.D6UG3LSr.js";const D=JSON.parse('{"title":"jest/no-untyped-mock-factory","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/jest/no-untyped-mock-factory.md","filePath":"docs/guide/usage/linter/rules/jest/no-untyped-mock-factory.md"}'),r={name:"docs/guide/usage/linter/rules/jest/no-untyped-mock-factory.md"},d={id:"jest-no-untyped-mock-factory",tabindex:"-1"},o=s("a",{class:"header-anchor",href:"#jest-no-untyped-mock-factory","aria-label":'Permalink to "jest/no-untyped-mock-factory <Badge type="info" text="Style" />"'},"​",-1),y={class:"rule-meta"},g=s("span",{class:"emoji"},"🛠️",-1),c=p("",9);function F(u,m,C,f,B,A){const n=t("Badge"),h=t("Alert");return E(),k("div",null,[s("h1",d,[i("jest/no-untyped-mock-factory "),a(n,{type:"info",text:"Style"}),i(),o]),s("div",y,[a(h,{class:"fix",type:"info"},{default:l(()=>[g,i(" An auto-fix is available for this rule for some violations. ")]),_:1})]),c])}const q=e(r,[["render",F]]);export{D as __pageData,q as default};
