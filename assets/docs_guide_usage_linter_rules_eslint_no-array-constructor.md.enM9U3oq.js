import{_ as s,c as r,j as e,a,I as i,a4 as n,o,E as c}from"./chunks/framework.D6UG3LSr.js";const x=JSON.parse('{"title":"eslint/no-array-constructor","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-array-constructor.md","filePath":"docs/guide/usage/linter/rules/eslint/no-array-constructor.md"}'),l={name:"docs/guide/usage/linter/rules/eslint/no-array-constructor.md"},d={id:"eslint-no-array-constructor",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#eslint-no-array-constructor","aria-label":'Permalink to "eslint/no-array-constructor <Badge type="info" text="Pedantic" />"'},"​",-1),p=n('<div class="rule-meta"></div><h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Disallow array constructor</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>Use of the Array constructor to construct a new array is generally discouraged in favor of array literal notation because of the single-argument pitfall and because the Array global may be redefined. The exception is when the Array constructor is used to intentionally create sparse arrays of a specified size by giving the constructor a single numeric argument.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div>',7);function u(y,g,_,k,m,b){const t=c("Badge");return o(),r("div",null,[e("h1",d,[a("eslint/no-array-constructor "),i(t,{type:"info",text:"Pedantic"}),a(),h]),p])}const v=s(l,[["render",u]]);export{x as __pageData,v as default};
