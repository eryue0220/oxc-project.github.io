<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://oxc.rs</id>
    <title>The Oxidation Compiler Blog</title>
    <updated>2024-11-06T09:08:37.957Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://oxc.rs"/>
    <icon>https://cdn.jsdelivr.net/gh/oxc-project/oxc-assets/square.ico</icon>
    <rights>Copyright © 2023-present Boshen &amp; Oxc Contributors</rights>
    <entry>
        <title type="html"><![CDATA[Oxlint General Availability]]></title>
        <id>https://oxc.rs/blog/2023-12-12-announcing-oxlint</id>
        <link href="https://oxc.rs/blog/2023-12-12-announcing-oxlint"/>
        <updated>2023-12-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<AppBlogPostHeader /><p>We are thrilled to announce that oxlint is now generally available!
This milestone signifies our team's ability to promptly address and triage issues.</p>
<p>Oxlint is a JavaScript linter designed to catch erroneous or useless code without requiring any configurations by default.</p>
<h2 id="how-to-use" tabindex="-1">How to Use <a class="header-anchor" href="#how-to-use" aria-label="Permalink to &quot;How to Use&quot;">&ZeroWidthSpace;</a></h2>
<p>At this stage, oxlint is <strong>not intended to fully replace ESLint</strong>; it serves as an enhancement when ESLint's slowness becomes a bottleneck in your workflow.</p>
<p>For faster feedback loops, we recommend running oxlint before ESLint in your lint-staged or CI setup, considering it only takes a few seconds to run on large codebases.</p>
<p>To test oxlint in your JavaScript / TypeScript codebase, simply execute the following command at the root directory of your repository:</p>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-8aeT2" id="tab-hjkniCr" checked><label data-title="npm" for="tab-hjkniCr">npm</label><input type="radio" name="group-8aeT2" id="tab-MykY4CB" ><label data-title="pnpm" for="tab-MykY4CB">pnpm</label><input type="radio" name="group-8aeT2" id="tab-HA2LPIz" ><label data-title="yarn" for="tab-HA2LPIz">yarn</label><input type="radio" name="group-8aeT2" id="tab-XQEwpuO" ><label data-title="bun" for="tab-XQEwpuO">bun</label><input type="radio" name="group-8aeT2" id="tab-V7p3V_z" ><label data-title="deno" for="tab-V7p3V_z">deno</label></div><div class="blocks">
<div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> oxlint@latest</span></span></code></pre>
</div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> dlx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> oxlint@latest</span></span></code></pre>
</div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> dlx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> oxlint@latest</span></span></code></pre>
</div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> bunx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> oxlint@latest</span></span></code></pre>
</div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> deno</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> npm:oxlint@latest</span></span></code></pre>
</div></div></div>
<p>Alternatively, refer to the <a href="/docs/guide/usage/linter.html">installation guide</a> for detailed instructions.</p>
<h2 id="design" tabindex="-1">Design <a class="header-anchor" href="#design" aria-label="Permalink to &quot;Design&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_50-100-times-faster-than-eslint" tabindex="-1">50-100 Times Faster than ESLint <a class="header-anchor" href="#_50-100-times-faster-than-eslint" aria-label="Permalink to &quot;50-100 Times Faster than ESLint&quot;">&ZeroWidthSpace;</a></h3>
<p>In real-world scenarios, Shopify reported that their 75 CI minutes ESLint run is now only 10 seconds.</p>
<p>From Jason Miller, Shopify DX and creator of Preact:</p>
<blockquote>
<p>oxlint has been a massive win for us at Shopify. Our previous linting setup took 75 minutes to run, so we were fanning it out across 40+ workers in CI.</p>
<p>By comparison, oxlint takes around 10 seconds to lint the same codebase on a single worker, and the output is easier to interpret.</p>
<p>We even caught a few bugs that were hidden or skipped by our old setup when we migrated!</p>
</blockquote>
<p>The majority of the performance gains stem from Oxlint being purposefully designed for performance, utilizing Rust and parallel processing as key factors.</p>
<h3 id="lint-for-correctness" tabindex="-1">Lint for Correctness <a class="header-anchor" href="#lint-for-correctness" aria-label="Permalink to &quot;Lint for Correctness&quot;">&ZeroWidthSpace;</a></h3>
<p>Oxlint defaults to identifying erroneous, redundant, or confusing code — prioritizing correctness over unnecessary nitpicking rules (categorized as <code>perf</code>, <code>suspicious</code>, <code>pedantic</code>, or <code>style</code>), which are disabled by default.</p>
<h3 id="ease-of-use" tabindex="-1">Ease of Use <a class="header-anchor" href="#ease-of-use" aria-label="Permalink to &quot;Ease of Use&quot;">&ZeroWidthSpace;</a></h3>
<p>Setting up new JavaScript / TypeScript codebases is becoming increasingly complex.
There's a high likelihood of encountering compatibility issues among your tools, potentially resulting in hours of wasted time.</p>
<p>That's why we designed oxlint to be zero-config out of the box; even Node.js is not a requirement.
Most adjustments can be made through the command-line, and reading from ESLint configuration file is currently work in progress.</p>
<h3 id="enhanced-diagnostics" tabindex="-1">Enhanced Diagnostics <a class="header-anchor" href="#enhanced-diagnostics" aria-label="Permalink to &quot;Enhanced Diagnostics&quot;">&ZeroWidthSpace;</a></h3>
<p>Understanding linter messages can be challenging.
Oxlint aims to simplify this by pinpointing root causes and providing helpful messages — eliminating the need for lengthy rule documentation reading, saving valuable time.</p>
<p>Running <code>oxlint -D perf</code> in the <a href="https://github.com/microsoft/vscode" target="_blank" rel="noreferrer">vscode repository</a>:</p>
<img width="100%" src="https://github.com/oxc-project/oxc/assets/1430279/094a3b24-0433-42ae-aad2-48a7dec2b985" >
<h3 id="consolidated-rules" tabindex="-1">Consolidated Rules <a class="header-anchor" href="#consolidated-rules" aria-label="Permalink to &quot;Consolidated Rules&quot;">&ZeroWidthSpace;</a></h3>
<p>Oxlint does not provide a plugin system yet, but we are actively consolidating rules from popular plugins like TypeScript, React, Jest, Unicorn, JSX-a11y and Import.</p>
<p>We recognize the importance of plugins in the JavaScript ecosystem and are also investigating a DSL-based plugin system.</p>
<p>However, you might appreciate a standalone linter — no need to manage a list of plugin dependencies,
navigate through <a href="https://github.com/antfu/eslint-ts-patch" target="_blank" rel="noreferrer">compatibility issues</a>,
or <a href="https://github.com/import-js/eslint-plugin-import/pull/2504#issuecomment-1191057877" target="_blank" rel="noreferrer">resort to forked plugins due to version constraints</a>.</p>
]]></summary>
        <content type="html"><![CDATA[<AppBlogPostHeader /><p>We are thrilled to announce that oxlint is now generally available!
This milestone signifies our team's ability to promptly address and triage issues.</p>
<p>Oxlint is a JavaScript linter designed to catch erroneous or useless code without requiring any configurations by default.</p>
<h2 id="how-to-use" tabindex="-1">How to Use <a class="header-anchor" href="#how-to-use" aria-label="Permalink to &quot;How to Use&quot;">&ZeroWidthSpace;</a></h2>
<p>At this stage, oxlint is <strong>not intended to fully replace ESLint</strong>; it serves as an enhancement when ESLint's slowness becomes a bottleneck in your workflow.</p>
<p>For faster feedback loops, we recommend running oxlint before ESLint in your lint-staged or CI setup, considering it only takes a few seconds to run on large codebases.</p>
<p>To test oxlint in your JavaScript / TypeScript codebase, simply execute the following command at the root directory of your repository:</p>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-dQb2x" id="tab-DJOBBUm" checked><label data-title="npm" for="tab-DJOBBUm">npm</label><input type="radio" name="group-dQb2x" id="tab-7CKh-u4" ><label data-title="pnpm" for="tab-7CKh-u4">pnpm</label><input type="radio" name="group-dQb2x" id="tab-yHS_NGY" ><label data-title="yarn" for="tab-yHS_NGY">yarn</label><input type="radio" name="group-dQb2x" id="tab-d8ExHHt" ><label data-title="bun" for="tab-d8ExHHt">bun</label><input type="radio" name="group-dQb2x" id="tab-M1wplyY" ><label data-title="deno" for="tab-M1wplyY">deno</label></div><div class="blocks">
<div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> oxlint@latest</span></span></code></pre>
</div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> dlx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> oxlint@latest</span></span></code></pre>
</div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> dlx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> oxlint@latest</span></span></code></pre>
</div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> bunx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> oxlint@latest</span></span></code></pre>
</div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> deno</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> npm:oxlint@latest</span></span></code></pre>
</div></div></div>
<p>Alternatively, refer to the <a href="/docs/guide/usage/linter.html">installation guide</a> for detailed instructions.</p>
<h2 id="design" tabindex="-1">Design <a class="header-anchor" href="#design" aria-label="Permalink to &quot;Design&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_50-100-times-faster-than-eslint" tabindex="-1">50-100 Times Faster than ESLint <a class="header-anchor" href="#_50-100-times-faster-than-eslint" aria-label="Permalink to &quot;50-100 Times Faster than ESLint&quot;">&ZeroWidthSpace;</a></h3>
<p>In real-world scenarios, Shopify reported that their 75 CI minutes ESLint run is now only 10 seconds.</p>
<p>From Jason Miller, Shopify DX and creator of Preact:</p>
<blockquote>
<p>oxlint has been a massive win for us at Shopify. Our previous linting setup took 75 minutes to run, so we were fanning it out across 40+ workers in CI.</p>
<p>By comparison, oxlint takes around 10 seconds to lint the same codebase on a single worker, and the output is easier to interpret.</p>
<p>We even caught a few bugs that were hidden or skipped by our old setup when we migrated!</p>
</blockquote>
<p>The majority of the performance gains stem from Oxlint being purposefully designed for performance, utilizing Rust and parallel processing as key factors.</p>
<h3 id="lint-for-correctness" tabindex="-1">Lint for Correctness <a class="header-anchor" href="#lint-for-correctness" aria-label="Permalink to &quot;Lint for Correctness&quot;">&ZeroWidthSpace;</a></h3>
<p>Oxlint defaults to identifying erroneous, redundant, or confusing code — prioritizing correctness over unnecessary nitpicking rules (categorized as <code>perf</code>, <code>suspicious</code>, <code>pedantic</code>, or <code>style</code>), which are disabled by default.</p>
<h3 id="ease-of-use" tabindex="-1">Ease of Use <a class="header-anchor" href="#ease-of-use" aria-label="Permalink to &quot;Ease of Use&quot;">&ZeroWidthSpace;</a></h3>
<p>Setting up new JavaScript / TypeScript codebases is becoming increasingly complex.
There's a high likelihood of encountering compatibility issues among your tools, potentially resulting in hours of wasted time.</p>
<p>That's why we designed oxlint to be zero-config out of the box; even Node.js is not a requirement.
Most adjustments can be made through the command-line, and reading from ESLint configuration file is currently work in progress.</p>
<h3 id="enhanced-diagnostics" tabindex="-1">Enhanced Diagnostics <a class="header-anchor" href="#enhanced-diagnostics" aria-label="Permalink to &quot;Enhanced Diagnostics&quot;">&ZeroWidthSpace;</a></h3>
<p>Understanding linter messages can be challenging.
Oxlint aims to simplify this by pinpointing root causes and providing helpful messages — eliminating the need for lengthy rule documentation reading, saving valuable time.</p>
<p>Running <code>oxlint -D perf</code> in the <a href="https://github.com/microsoft/vscode" target="_blank" rel="noreferrer">vscode repository</a>:</p>
<img width="100%" src="https://github.com/oxc-project/oxc/assets/1430279/094a3b24-0433-42ae-aad2-48a7dec2b985" >
<h3 id="consolidated-rules" tabindex="-1">Consolidated Rules <a class="header-anchor" href="#consolidated-rules" aria-label="Permalink to &quot;Consolidated Rules&quot;">&ZeroWidthSpace;</a></h3>
<p>Oxlint does not provide a plugin system yet, but we are actively consolidating rules from popular plugins like TypeScript, React, Jest, Unicorn, JSX-a11y and Import.</p>
<p>We recognize the importance of plugins in the JavaScript ecosystem and are also investigating a DSL-based plugin system.</p>
<p>However, you might appreciate a standalone linter — no need to manage a list of plugin dependencies,
navigate through <a href="https://github.com/antfu/eslint-ts-patch" target="_blank" rel="noreferrer">compatibility issues</a>,
or <a href="https://github.com/import-js/eslint-plugin-import/pull/2504#issuecomment-1191057877" target="_blank" rel="noreferrer">resort to forked plugins due to version constraints</a>.</p>
<hr>
<p>Happy linting and have a joyful holiday season!</p>
<p>To get started, follow the <a href="/docs/guide/usage/linter.html">installation guide</a>,
learn more about the <a href="/docs/guide/introduction.html">oxc project</a>,
or discuss on <a href="https://news.ycombinator.com/item?id=38652887" target="_blank" rel="noreferrer">Hacker News</a>.</p>
]]></content>
        <author>
            <name>Boshen</name>
            <uri>https://github.com/Boshen</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Oxlint Import Plugin Alpha]]></title>
        <id>https://oxc.rs/blog/2024-05-04-import-plugin-alpha</id>
        <link href="https://oxc.rs/blog/2024-05-04-import-plugin-alpha"/>
        <updated>2024-05-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<AppBlogPostHeader /><p>We are excited to announce an alpha release for <code>oxlint --import-plugin</code>, a port of <a href="https://github.com/import-js/eslint-plugin-import" target="_blank" rel="noreferrer"><code>eslint-plugin-import</code></a>.</p>
<p>This port aims to resolve all known issues associated with <code>eslint-plugin-import</code>:</p>
<ul>
<li>Performance - execution time exceeding one minute when certain rules are enabled</li>
<li>Dependency size - 188 dependencies totaling 30M</li>
<li>Backwards compatibility - the necessity to <a href="https://github.com/import-js/eslint-plugin-import/pull/2447#issuecomment-1117384140" target="_blank" rel="noreferrer">support Node.js v4.0.0</a></li>
<li>Dependency compatibility - the need to replace it with <a href="https://github.com/un-ts/eslint-plugin-import-x" target="_blank" rel="noreferrer"><code>eslint-plugin-import-x</code></a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/issues/2948" target="_blank" rel="noreferrer">Upgrading to ESLint v9</a></li>
</ul>
<h2 id="what-s-in-the-release" tabindex="-1">What's in the release? <a class="header-anchor" href="#what-s-in-the-release" aria-label="Permalink to &quot;What's in the release?&quot;">&ZeroWidthSpace;</a></h2>
<p>This alpha release is expected to work if your project is in ESM (ECMAScript Modules).</p>
<p>If path aliases (e.g. <code>@/foo</code>) is required through <a href="https://www.typescriptlang.org/tsconfig/#paths" target="_blank" rel="noreferrer">tsconfig.compilerOptions.paths</a>,
the <code>--tsconfig</code> option can be used:</p>
<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span>npx oxlint@latest --tsconfig ./tsconfig.json --import-plugin</span></span></code></pre>
</div><p>The rules that are enabled by default via <code>npx oxlint@latest --import-plugin</code> are:</p>
<ul>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/default.md" target="_blank" rel="noreferrer">default</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/named.md" target="_blank" rel="noreferrer">named</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/namespace.md" target="_blank" rel="noreferrer">namespace</a></li>
</ul>
<p>Rules that can be enabled selectively via <code>npx oxlint@latest --import-plugin -D rule-name</code> are:</p>
<ul>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-as-default.md" target="_blank" rel="noreferrer">no-named-as-default</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-as-default-member.md" target="_blank" rel="noreferrer">no-named-as-default-member</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-self-import.md" target="_blank" rel="noreferrer">no-self-import</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-duplicates.md" target="_blank" rel="noreferrer">no-duplicates</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-amd.md" target="_blank" rel="noreferrer">no-amd</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-default-export.md" target="_blank" rel="noreferrer">no-default-export</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-cycle.md" target="_blank" rel="noreferrer">no-cycle</a></li>
</ul>
<p>There are also improvements to these rules; for example, the diagnostics for the <code>no-cycle</code> rule have been improved:</p>
<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span>  ⚠ eslint-plugin-import(no-cycle): Dependency cycle detected</span></span>
<span class="line"><span>    ╭─[apps/web/playwright/lib/fixtures.ts:13:42]</span></span>
<span class="line"><span> 12 │ import { createPaymentsFixture } from "../fixtures/payments";</span></span>
<span class="line"><span> 13 │ import { createBookingPageFixture } from "../fixtures/regularBookings";</span></span>
<span class="line"><span>    ·                                          ─────────────────────────────</span></span>
<span class="line"><span> 14 │ import { createRoutingFormsFixture } from "../fixtures/routingForms";</span></span>
<span class="line"><span>    ╰────</span></span>
<span class="line"><span>  help: These paths form a cycle:</span></span>
<span class="line"><span>        -> ../fixtures/regularBookings - apps/web/playwright/fixtures/regularBookings.ts</span></span>
<span class="line"><span>        -> ./users - apps/web/playwright/fixtures/users.ts</span></span>
<span class="line"><span>        -> ../lib/testUtils - apps/web/playwright/lib/testUtils.ts</span></span>
<span class="line"><span>        -> ./fixtures - apps/web/playwright/lib/fixtures.ts</span></span></code></pre>
</div><p>This isn't a long list of features,
but due to the complexity of the current state of the ecosystem,
it requires a lot of effort to implement these rules and ensure they work correctly.</p>
<p>Over the past six months, we have worked in our spare time and successfully completed all the prerequisites for the <code>--import-plugin</code> to work:</p>
<ul>
<li>a <a href="https://github.com/oxc-project/oxc-resolver" target="_blank" rel="noreferrer">resolver</a> for module resolution</li>
<li>a small <a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/service.rs" target="_blank" rel="noreferrer">&quot;runtime&quot;</a> to maximize processing dependent files in parallel</li>
<li>a <a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_syntax/src/module_record.rs" target="_blank" rel="noreferrer"><code>ModuleRecord</code></a> data structure for storing import / export information, and its respective <a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_semantic/src/module_record/builder.rs" target="_blank" rel="noreferrer">builder</a></li>
</ul>
<h2 id="how-can-i-help" tabindex="-1">How can I help? <a class="header-anchor" href="#how-can-i-help" aria-label="Permalink to &quot;How can I help?&quot;">&ZeroWidthSpace;</a></h2>
<p>If you are a project maintainer (a.k.a. configuration engineer) and lack the time or energy to keep ESLint and all its plugins updated,
you may follow <a href="https://github.com/brooooooklyn" target="_blank" rel="noreferrer">@brooooooklyn</a>'s lead and <a href="https://github.com/napi-rs/napi-rs/pull/2032" target="_blank" rel="noreferrer">replace ESLint with oxlint in all his projects</a>.</p>
<p>If you are an open-source enthusiast and are willing to help out, come talk to us on <a href="https://discord.gg/9uXCAwqQZW" target="_blank" rel="noreferrer">discord</a>, check out the <a href="https://github.com/oxc-project/oxc/issues/481" target="_blank" rel="noreferrer">linter product plan and progress issue</a>, or help by <a href="https://github.com/oxc-project/oxc/issues/3161" target="_blank" rel="noreferrer">proposing new rules</a> that were deferred.</p>
<p>If you are an engineering manager, or are willing to migrate your project to oxlint (with 330 rules and growing) to keep your infrastructure costs down,
you may consider <a href="https://github.com/sponsors/Boshen" target="_blank" rel="noreferrer">sponsoring</a> so we can prioritize your project.</p>
<p>Please remember <code>oxlint</code> is currently community driven, I believe that with enough resources, we can make <code>--import-plugin</code> generally available in the next few months.</p>
]]></summary>
        <content type="html"><![CDATA[<AppBlogPostHeader /><p>We are excited to announce an alpha release for <code>oxlint --import-plugin</code>, a port of <a href="https://github.com/import-js/eslint-plugin-import" target="_blank" rel="noreferrer"><code>eslint-plugin-import</code></a>.</p>
<p>This port aims to resolve all known issues associated with <code>eslint-plugin-import</code>:</p>
<ul>
<li>Performance - execution time exceeding one minute when certain rules are enabled</li>
<li>Dependency size - 188 dependencies totaling 30M</li>
<li>Backwards compatibility - the necessity to <a href="https://github.com/import-js/eslint-plugin-import/pull/2447#issuecomment-1117384140" target="_blank" rel="noreferrer">support Node.js v4.0.0</a></li>
<li>Dependency compatibility - the need to replace it with <a href="https://github.com/un-ts/eslint-plugin-import-x" target="_blank" rel="noreferrer"><code>eslint-plugin-import-x</code></a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/issues/2948" target="_blank" rel="noreferrer">Upgrading to ESLint v9</a></li>
</ul>
<h2 id="what-s-in-the-release" tabindex="-1">What's in the release? <a class="header-anchor" href="#what-s-in-the-release" aria-label="Permalink to &quot;What's in the release?&quot;">&ZeroWidthSpace;</a></h2>
<p>This alpha release is expected to work if your project is in ESM (ECMAScript Modules).</p>
<p>If path aliases (e.g. <code>@/foo</code>) is required through <a href="https://www.typescriptlang.org/tsconfig/#paths" target="_blank" rel="noreferrer">tsconfig.compilerOptions.paths</a>,
the <code>--tsconfig</code> option can be used:</p>
<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span>npx oxlint@latest --tsconfig ./tsconfig.json --import-plugin</span></span></code></pre>
</div><p>The rules that are enabled by default via <code>npx oxlint@latest --import-plugin</code> are:</p>
<ul>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/default.md" target="_blank" rel="noreferrer">default</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/named.md" target="_blank" rel="noreferrer">named</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/namespace.md" target="_blank" rel="noreferrer">namespace</a></li>
</ul>
<p>Rules that can be enabled selectively via <code>npx oxlint@latest --import-plugin -D rule-name</code> are:</p>
<ul>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-as-default.md" target="_blank" rel="noreferrer">no-named-as-default</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-named-as-default-member.md" target="_blank" rel="noreferrer">no-named-as-default-member</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-self-import.md" target="_blank" rel="noreferrer">no-self-import</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-duplicates.md" target="_blank" rel="noreferrer">no-duplicates</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-amd.md" target="_blank" rel="noreferrer">no-amd</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-default-export.md" target="_blank" rel="noreferrer">no-default-export</a></li>
<li><a href="https://github.com/import-js/eslint-plugin-import/blob/v2.29.1/docs/rules/no-cycle.md" target="_blank" rel="noreferrer">no-cycle</a></li>
</ul>
<p>There are also improvements to these rules; for example, the diagnostics for the <code>no-cycle</code> rule have been improved:</p>
<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span>  ⚠ eslint-plugin-import(no-cycle): Dependency cycle detected</span></span>
<span class="line"><span>    ╭─[apps/web/playwright/lib/fixtures.ts:13:42]</span></span>
<span class="line"><span> 12 │ import { createPaymentsFixture } from "../fixtures/payments";</span></span>
<span class="line"><span> 13 │ import { createBookingPageFixture } from "../fixtures/regularBookings";</span></span>
<span class="line"><span>    ·                                          ─────────────────────────────</span></span>
<span class="line"><span> 14 │ import { createRoutingFormsFixture } from "../fixtures/routingForms";</span></span>
<span class="line"><span>    ╰────</span></span>
<span class="line"><span>  help: These paths form a cycle:</span></span>
<span class="line"><span>        -> ../fixtures/regularBookings - apps/web/playwright/fixtures/regularBookings.ts</span></span>
<span class="line"><span>        -> ./users - apps/web/playwright/fixtures/users.ts</span></span>
<span class="line"><span>        -> ../lib/testUtils - apps/web/playwright/lib/testUtils.ts</span></span>
<span class="line"><span>        -> ./fixtures - apps/web/playwright/lib/fixtures.ts</span></span></code></pre>
</div><p>This isn't a long list of features,
but due to the complexity of the current state of the ecosystem,
it requires a lot of effort to implement these rules and ensure they work correctly.</p>
<p>Over the past six months, we have worked in our spare time and successfully completed all the prerequisites for the <code>--import-plugin</code> to work:</p>
<ul>
<li>a <a href="https://github.com/oxc-project/oxc-resolver" target="_blank" rel="noreferrer">resolver</a> for module resolution</li>
<li>a small <a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/service.rs" target="_blank" rel="noreferrer">&quot;runtime&quot;</a> to maximize processing dependent files in parallel</li>
<li>a <a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_syntax/src/module_record.rs" target="_blank" rel="noreferrer"><code>ModuleRecord</code></a> data structure for storing import / export information, and its respective <a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_semantic/src/module_record/builder.rs" target="_blank" rel="noreferrer">builder</a></li>
</ul>
<h2 id="how-can-i-help" tabindex="-1">How can I help? <a class="header-anchor" href="#how-can-i-help" aria-label="Permalink to &quot;How can I help?&quot;">&ZeroWidthSpace;</a></h2>
<p>If you are a project maintainer (a.k.a. configuration engineer) and lack the time or energy to keep ESLint and all its plugins updated,
you may follow <a href="https://github.com/brooooooklyn" target="_blank" rel="noreferrer">@brooooooklyn</a>'s lead and <a href="https://github.com/napi-rs/napi-rs/pull/2032" target="_blank" rel="noreferrer">replace ESLint with oxlint in all his projects</a>.</p>
<p>If you are an open-source enthusiast and are willing to help out, come talk to us on <a href="https://discord.gg/9uXCAwqQZW" target="_blank" rel="noreferrer">discord</a>, check out the <a href="https://github.com/oxc-project/oxc/issues/481" target="_blank" rel="noreferrer">linter product plan and progress issue</a>, or help by <a href="https://github.com/oxc-project/oxc/issues/3161" target="_blank" rel="noreferrer">proposing new rules</a> that were deferred.</p>
<p>If you are an engineering manager, or are willing to migrate your project to oxlint (with 330 rules and growing) to keep your infrastructure costs down,
you may consider <a href="https://github.com/sponsors/Boshen" target="_blank" rel="noreferrer">sponsoring</a> so we can prioritize your project.</p>
<p>Please remember <code>oxlint</code> is currently community driven, I believe that with enough resources, we can make <code>--import-plugin</code> generally available in the next few months.</p>
<hr>
<p>To start using <code>oxlint</code>, follow the <a href="/docs/guide/usage/linter.html">installation guide</a> or learn more about the <a href="/docs/guide/introduction.html">oxc project</a>.</p>
]]></content>
        <author>
            <name>Boshen</name>
            <uri>https://github.com/Boshen</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Oxc Transformer Alpha]]></title>
        <id>https://oxc.rs/blog/2024-09-29-transformer-alpha</id>
        <link href="https://oxc.rs/blog/2024-09-29-transformer-alpha"/>
        <updated>2024-09-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[<AppBlogPostHeader /><br />
<p>We are excited to announce an alpha release for Oxc transform (a.k.a transpile).</p>
<p>This release contains three major features:</p>
<ol>
<li>Transforming TypeScript to ESNext.</li>
<li>Transforming React JSX to ESNext, with built-in React Refresh.</li>
<li><a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-5-5.html#isolated-declarations" target="_blank" rel="noreferrer">TypeScript Isolated Declarations DTS Emit</a> without using the TypeScript compiler.</li>
</ol>
<p>In this alpha stage, we recommend to experiment with these features to speed up build times.</p>
<p><a href="https://github.com/oxc-project/bench-transformer" target="_blank" rel="noreferrer">Our benchmark</a> shows:</p>
<ul>
<li>Transform: Oxc is 3x - 5x faster than SWC, uses 20% less memory, and has smaller package size (2 MB vs SWC's 37 MB).</li>
<li>Transform: Oxc is 20x - 50x faster than Babel, uses 70% less memory, and is 19 MB smaller, with only 2 npm packages to install vs Babel's 170.</li>
<li>React development + React Refresh: Oxc is 5x faster than SWC, 50x faster than Babel.</li>
<li>TS isolated declarations <code>.d.ts</code> emit: Oxc is 40x faster than TSC on typical files, 20x faster on larger files.</li>
</ul>
<h2 id="usage-examples" tabindex="-1">Usage Examples <a class="header-anchor" href="#usage-examples" aria-label="Permalink to &quot;Usage Examples&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="oxc-transform-npm-package" tabindex="-1"><a href="https://www.npmjs.com/package/oxc-transform" target="_blank" rel="noreferrer"><code>oxc-transform</code></a> npm package <a class="header-anchor" href="#oxc-transform-npm-package" aria-label="Permalink to &quot;[`oxc-transform`](https://www.npmjs.com/package/oxc-transform) npm package&quot;">&ZeroWidthSpace;</a></h3>
<p>Vue.js is currently <a href="https://github.com/vuejs/core/blob/0895b2624b707ea1e75c41f2e1f75388e7a6f101/scripts/build-types.js#L20" target="_blank" rel="noreferrer">experimenting</a>
the <a href="https://www.npmjs.com/package/oxc-transform" target="_blank" rel="noreferrer"><code>oxc-transform</code></a> npm package for isolated declarations in its build pipeline:</p>
<div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> { isolatedDeclaration } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "oxc-transform"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> dts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> isolatedDeclaration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(filename, ts);</span></span></code></pre>
</div><p><a href="https://github.com/lukeed" target="_blank" rel="noreferrer">@lukeed</a> and <a href="https://github.com/maraisr" target="_blank" rel="noreferrer">@maraisr</a> are utilizing <code>oxc-transform</code>
for their packages
<a href="https://github.com/lukeed/empathic" target="_blank" rel="noreferrer"><code>empathic</code></a> and <a href="https://github.com/maraisr/dldr" target="_blank" rel="noreferrer"><code>dldr</code></a>
to transform and generate <code>.d.ts</code> <a href="https://github.com/lukeed/empathic/blob/b83a360ff55051590dec19aa913cd12da97fa3f8/scripts/build.ts#L45-L52" target="_blank" rel="noreferrer">in a single step</a>.</p>
<p>The following example demonstrates emitting <code>.js</code> and <code>.d.ts</code> in a single transformation step:</p>
<div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> { transform } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "oxc-transform"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> transformed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(filePath, sourceCode, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  typescript: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    onlyRemoveTypeImports: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    declaration: { stripInternal: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">writeFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"out.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, transformed.code);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">writeFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"out.d.ts"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, transformed.declaration);</span></span></code></pre>
</div><h3 id="unplugin-isolated-decl" tabindex="-1"><a href="https://github.com/unplugin/unplugin-isolated-decl" target="_blank" rel="noreferrer"><code>unplugin-isolated-decl</code></a> <a class="header-anchor" href="#unplugin-isolated-decl" aria-label="Permalink to &quot;[`unplugin-isolated-decl`](https://github.com/unplugin/unplugin-isolated-decl)&quot;">&ZeroWidthSpace;</a></h3>
<p><code>vue-macros</code> <a href="https://github.com/vue-macros/vue-macros/blob/4247c7ba9189c630111e058245ce1412c8da9229/tsup.config.ts#L10" target="_blank" rel="noreferrer">uses</a> <code>unplugin-isolated-decl</code> as the integration tool for its esbuild plugin.</p>
<p><a href="https://github.com/sxzz" target="_blank" rel="noreferrer">@sxzz</a> <a href="https://x.com/sanxiaozhizi/status/1821320327231893600" target="_blank" rel="noreferrer">reports</a> their <code>.d.ts</code> generation time is reduced from 76s to 16s.</p>
<h3 id="bazel-build-at-airtable" tabindex="-1">Bazel build at <a href="https://github.com/Airtable" target="_blank" rel="noreferrer">Airtable</a> <a class="header-anchor" href="#bazel-build-at-airtable" aria-label="Permalink to &quot;Bazel build at [Airtable](https://github.com/Airtable)&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://github.com/MichaelMitchell-at" target="_blank" rel="noreferrer">@michaelm</a> from <a href="https://github.com/Airtable" target="_blank" rel="noreferrer">Airtable</a>
is integrating Oxc's isolated declarations <code>.d.ts</code> emit in their CI pipeline within their <a href="https://github.com/aspect-build/rules_ts/pull/697" target="_blank" rel="noreferrer">Bazel build</a>.</p>
<h3 id="rust-oxc-transformer-crate" tabindex="-1">Rust <a href="https://crates.io/crates/oxc_transformer" target="_blank" rel="noreferrer"><code>oxc_transformer</code></a> crate <a class="header-anchor" href="#rust-oxc-transformer-crate" aria-label="Permalink to &quot;Rust [`oxc_transformer`](https://crates.io/crates/oxc_transformer) crate&quot;">&ZeroWidthSpace;</a></h3>
<p>The <a href="https://rolldown.rs" target="_blank" rel="noreferrer">Rolldown</a> bundler uses the <code>oxc_transformer</code> Rust crate <a href="https://github.com/rolldown/rolldown/blob/3213e8fdb9e25f29295b6ec0d92fcc2ce03ce396/crates/rolldown/src/utils/pre_process_ecma_ast.rs#L67-L75" target="_blank" rel="noreferrer">directly</a>.</p>
<h2 id="benchmark-results" tabindex="-1">Benchmark Results <a class="header-anchor" href="#benchmark-results" aria-label="Permalink to &quot;Benchmark Results&quot;">&ZeroWidthSpace;</a></h2>
<p>The benchmark setup is located at <a href="https://github.com/oxc-project/bench-transformer" target="_blank" rel="noreferrer">oxc-project/bench-transformer</a>
and the benchmarks are shown in its <a href="https://github.com/oxc-project/bench-transformer/actions/workflows/ci.yml" target="_blank" rel="noreferrer">GitHub Actions</a>.</p>
<p>(Corrections are welcome for any misconfigurations.)</p>
<p>On <code>ubuntu-latest</code>, an example of different lines of code are measured:</p>
<h3 id="transform" tabindex="-1">Transform <a class="header-anchor" href="#transform" aria-label="Permalink to &quot;Transform&quot;">&ZeroWidthSpace;</a></h3>
<p>| Lines  | oxc     | swc           | babel         |
|</p>
]]></summary>
        <content type="html"><![CDATA[<AppBlogPostHeader /><br />
<p>We are excited to announce an alpha release for Oxc transform (a.k.a transpile).</p>
<p>This release contains three major features:</p>
<ol>
<li>Transforming TypeScript to ESNext.</li>
<li>Transforming React JSX to ESNext, with built-in React Refresh.</li>
<li><a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-5-5.html#isolated-declarations" target="_blank" rel="noreferrer">TypeScript Isolated Declarations DTS Emit</a> without using the TypeScript compiler.</li>
</ol>
<p>In this alpha stage, we recommend to experiment with these features to speed up build times.</p>
<p><a href="https://github.com/oxc-project/bench-transformer" target="_blank" rel="noreferrer">Our benchmark</a> shows:</p>
<ul>
<li>Transform: Oxc is 3x - 5x faster than SWC, uses 20% less memory, and has smaller package size (2 MB vs SWC's 37 MB).</li>
<li>Transform: Oxc is 20x - 50x faster than Babel, uses 70% less memory, and is 19 MB smaller, with only 2 npm packages to install vs Babel's 170.</li>
<li>React development + React Refresh: Oxc is 5x faster than SWC, 50x faster than Babel.</li>
<li>TS isolated declarations <code>.d.ts</code> emit: Oxc is 40x faster than TSC on typical files, 20x faster on larger files.</li>
</ul>
<h2 id="usage-examples" tabindex="-1">Usage Examples <a class="header-anchor" href="#usage-examples" aria-label="Permalink to &quot;Usage Examples&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="oxc-transform-npm-package" tabindex="-1"><a href="https://www.npmjs.com/package/oxc-transform" target="_blank" rel="noreferrer"><code>oxc-transform</code></a> npm package <a class="header-anchor" href="#oxc-transform-npm-package" aria-label="Permalink to &quot;[`oxc-transform`](https://www.npmjs.com/package/oxc-transform) npm package&quot;">&ZeroWidthSpace;</a></h3>
<p>Vue.js is currently <a href="https://github.com/vuejs/core/blob/0895b2624b707ea1e75c41f2e1f75388e7a6f101/scripts/build-types.js#L20" target="_blank" rel="noreferrer">experimenting</a>
the <a href="https://www.npmjs.com/package/oxc-transform" target="_blank" rel="noreferrer"><code>oxc-transform</code></a> npm package for isolated declarations in its build pipeline:</p>
<div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> { isolatedDeclaration } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "oxc-transform"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> dts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> isolatedDeclaration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(filename, ts);</span></span></code></pre>
</div><p><a href="https://github.com/lukeed" target="_blank" rel="noreferrer">@lukeed</a> and <a href="https://github.com/maraisr" target="_blank" rel="noreferrer">@maraisr</a> are utilizing <code>oxc-transform</code>
for their packages
<a href="https://github.com/lukeed/empathic" target="_blank" rel="noreferrer"><code>empathic</code></a> and <a href="https://github.com/maraisr/dldr" target="_blank" rel="noreferrer"><code>dldr</code></a>
to transform and generate <code>.d.ts</code> <a href="https://github.com/lukeed/empathic/blob/b83a360ff55051590dec19aa913cd12da97fa3f8/scripts/build.ts#L45-L52" target="_blank" rel="noreferrer">in a single step</a>.</p>
<p>The following example demonstrates emitting <code>.js</code> and <code>.d.ts</code> in a single transformation step:</p>
<div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> { transform } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> "oxc-transform"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> transformed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(filePath, sourceCode, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  typescript: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    onlyRemoveTypeImports: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">    declaration: { stripInternal: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">writeFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"out.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, transformed.code);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">writeFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"out.d.ts"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, transformed.declaration);</span></span></code></pre>
</div><h3 id="unplugin-isolated-decl" tabindex="-1"><a href="https://github.com/unplugin/unplugin-isolated-decl" target="_blank" rel="noreferrer"><code>unplugin-isolated-decl</code></a> <a class="header-anchor" href="#unplugin-isolated-decl" aria-label="Permalink to &quot;[`unplugin-isolated-decl`](https://github.com/unplugin/unplugin-isolated-decl)&quot;">&ZeroWidthSpace;</a></h3>
<p><code>vue-macros</code> <a href="https://github.com/vue-macros/vue-macros/blob/4247c7ba9189c630111e058245ce1412c8da9229/tsup.config.ts#L10" target="_blank" rel="noreferrer">uses</a> <code>unplugin-isolated-decl</code> as the integration tool for its esbuild plugin.</p>
<p><a href="https://github.com/sxzz" target="_blank" rel="noreferrer">@sxzz</a> <a href="https://x.com/sanxiaozhizi/status/1821320327231893600" target="_blank" rel="noreferrer">reports</a> their <code>.d.ts</code> generation time is reduced from 76s to 16s.</p>
<h3 id="bazel-build-at-airtable" tabindex="-1">Bazel build at <a href="https://github.com/Airtable" target="_blank" rel="noreferrer">Airtable</a> <a class="header-anchor" href="#bazel-build-at-airtable" aria-label="Permalink to &quot;Bazel build at [Airtable](https://github.com/Airtable)&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://github.com/MichaelMitchell-at" target="_blank" rel="noreferrer">@michaelm</a> from <a href="https://github.com/Airtable" target="_blank" rel="noreferrer">Airtable</a>
is integrating Oxc's isolated declarations <code>.d.ts</code> emit in their CI pipeline within their <a href="https://github.com/aspect-build/rules_ts/pull/697" target="_blank" rel="noreferrer">Bazel build</a>.</p>
<h3 id="rust-oxc-transformer-crate" tabindex="-1">Rust <a href="https://crates.io/crates/oxc_transformer" target="_blank" rel="noreferrer"><code>oxc_transformer</code></a> crate <a class="header-anchor" href="#rust-oxc-transformer-crate" aria-label="Permalink to &quot;Rust [`oxc_transformer`](https://crates.io/crates/oxc_transformer) crate&quot;">&ZeroWidthSpace;</a></h3>
<p>The <a href="https://rolldown.rs" target="_blank" rel="noreferrer">Rolldown</a> bundler uses the <code>oxc_transformer</code> Rust crate <a href="https://github.com/rolldown/rolldown/blob/3213e8fdb9e25f29295b6ec0d92fcc2ce03ce396/crates/rolldown/src/utils/pre_process_ecma_ast.rs#L67-L75" target="_blank" rel="noreferrer">directly</a>.</p>
<h2 id="benchmark-results" tabindex="-1">Benchmark Results <a class="header-anchor" href="#benchmark-results" aria-label="Permalink to &quot;Benchmark Results&quot;">&ZeroWidthSpace;</a></h2>
<p>The benchmark setup is located at <a href="https://github.com/oxc-project/bench-transformer" target="_blank" rel="noreferrer">oxc-project/bench-transformer</a>
and the benchmarks are shown in its <a href="https://github.com/oxc-project/bench-transformer/actions/workflows/ci.yml" target="_blank" rel="noreferrer">GitHub Actions</a>.</p>
<p>(Corrections are welcome for any misconfigurations.)</p>
<p>On <code>ubuntu-latest</code>, an example of different lines of code are measured:</p>
<h3 id="transform" tabindex="-1">Transform <a class="header-anchor" href="#transform" aria-label="Permalink to &quot;Transform&quot;">&ZeroWidthSpace;</a></h3>
<table tabindex="0">
<thead>
<tr>
<th>Lines</th>
<th>oxc</th>
<th>swc</th>
<th>babel</th>
</tr>
</thead>
<tbody>
<tr>
<td>~100</td>
<td>0.14 ms</td>
<td>0.7 ms (5x)</td>
<td>11.5 ms (82x)</td>
</tr>
<tr>
<td>~1000</td>
<td>0.9 ms</td>
<td>5.7 ms (6.3x)</td>
<td>38.7 ms (43x)</td>
</tr>
<tr>
<td>~10000</td>
<td>14.9 ms</td>
<td>35.9 ms(2.4x)</td>
<td>492 ms (33x)</td>
</tr>
</tbody>
</table>
<h3 id="isolated-declarations" tabindex="-1">Isolated Declarations <a class="header-anchor" href="#isolated-declarations" aria-label="Permalink to &quot;Isolated Declarations&quot;">&ZeroWidthSpace;</a></h3>
<table tabindex="0">
<thead>
<tr>
<th>Lines</th>
<th>oxc</th>
<th>tsc</th>
</tr>
</thead>
<tbody>
<tr>
<td>~100</td>
<td>0.1 ms</td>
<td>23.1 ms (231x)</td>
</tr>
<tr>
<td>~1000</td>
<td>3.1 ms</td>
<td>26.8 ms (8.6x)</td>
</tr>
<tr>
<td>~10000</td>
<td>3.5 ms</td>
<td>115.2 ms (33x)</td>
</tr>
</tbody>
</table>
<h2 id="package-size" tabindex="-1">Package size <a class="header-anchor" href="#package-size" aria-label="Permalink to &quot;Package size&quot;">&ZeroWidthSpace;</a></h2>
<p>Oxc downloads only 2 npm packages, a total of 2 MB.</p>
<table tabindex="0">
<thead>
<tr>
<th>Package</th>
<th>Size</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>@oxc-transform/binding-darwin-arm64</code></td>
<td><a href="https://www.npmjs.com/package/@oxc-transform/binding-darwin-arm64" target="_blank" rel="noreferrer">2.0 MB</a></td>
</tr>
<tr>
<td><code>@swc/core-darwin-arm64</code></td>
<td><a href="https://www.npmjs.com/package/@swc/core-darwin-arm64" target="_blank" rel="noreferrer">37.5 MB</a></td>
</tr>
<tr>
<td><code>@babel/core</code> + <code>@babel/preset-env</code> + <code>@babel/preset-react</code> + <code>@babel/preset-typescript</code></td>
<td><a href="https://www.npmjs.com/package/@oxc-transform/binding-darwin-arm64" target="_blank" rel="noreferrer">21 MB and 170 packages</a></td>
</tr>
</tbody>
</table>
<h2 id="memory-usage" tabindex="-1">Memory Usage <a class="header-anchor" href="#memory-usage" aria-label="Permalink to &quot;Memory Usage&quot;">&ZeroWidthSpace;</a></h2>
<p>Oxc uses less memory.</p>
<p>Memory usage transforming <code>parser.ts</code> (10777 lines) - measured using <code>/usr/bin/time -alh node</code>:</p>
<table tabindex="0">
<thead>
<tr>
<th></th>
<th>Max RSS</th>
</tr>
</thead>
<tbody>
<tr>
<td>oxc</td>
<td>51 MB</td>
</tr>
<tr>
<td>swc</td>
<td>67 MB</td>
</tr>
<tr>
<td>babel</td>
<td>172 MB</td>
</tr>
</tbody>
</table>
<h2 id="next-release" tabindex="-1">Next Release <a class="header-anchor" href="#next-release" aria-label="Permalink to &quot;Next Release&quot;">&ZeroWidthSpace;</a></h2>
<p>Our next release will include target lowering to ES6 and <code>@babel/plugin-transform-modules-commonjs</code>.</p>
<h2 id="acknowledgements" tabindex="-1">Acknowledgements <a class="header-anchor" href="#acknowledgements" aria-label="Permalink to &quot;Acknowledgements&quot;">&ZeroWidthSpace;</a></h2>
<p>Thank you <a href="https://github.com/dunqing" target="_blank" rel="noreferrer">@Dunqing</a> and <a href="https://github.com/overlookmotel" target="_blank" rel="noreferrer">@overlookmotel</a> for all the hard work involved in this release.</p>
<p>Thank you <a href="https://snyder.tech" target="_blank" rel="noreferrer">snyder.tech</a>, <a href="https://schoolhouse.world" target="_blank" rel="noreferrer">schoolhouse.world</a>, <a href="https://github.com/lukeed" target="_blank" rel="noreferrer">@lukeed</a> and <a href="https://github.com/maraisr" target="_blank" rel="noreferrer">@maraisr</a> for the generous <a href="https://github.com/sponsors/boshen" target="_blank" rel="noreferrer">sponsorship</a>.</p>
]]></content>
        <author>
            <name>Boshen</name>
            <uri>https://github.com/Boshen</uri>
        </author>
        <author>
            <name>Dunqing</name>
            <uri>https://github.com/dunqing</uri>
        </author>
        <author>
            <name>overlookmotel</name>
            <uri>https://github.com/overlookmotel</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Oxlint v0.10 Migration Guide]]></title>
        <id>https://oxc.rs/blog/2024-10-18-oxlint-v0.10-release</id>
        <link href="https://oxc.rs/blog/2024-10-18-oxlint-v0.10-release"/>
        <updated>2024-10-18T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<AppBlogPostHeader /><p>Oxlint v0.10.0 is here! This release includes several exciting features,
including many improvements to configuration files.</p>
<h2 id="new-features" tabindex="-1">New Features <a class="header-anchor" href="#new-features" aria-label="Permalink to &quot;New Features&quot;">&ZeroWidthSpace;</a></h2>
<!-- todo: other features -->
<h3 id="new-rules" tabindex="-1">New Rules <a class="header-anchor" href="#new-rules" aria-label="Permalink to &quot;New Rules&quot;">&ZeroWidthSpace;</a></h3>
<p>This release includes the following new rules:</p>
<ul>
<li><code>promise/no-callback-in-promise</code></li>
<li><code>react/iframe-missing-sandbox</code></li>
<li><code>node/no-new-require</code></li>
</ul>
<p>And adds auto fixes/suggestions for:</p>
<ul>
<li><code>eslint/no-plusplus</code></li>
</ul>
<h3 id="enable-disable-rules-by-category" tabindex="-1">Enable/Disable Rules by Category <a class="header-anchor" href="#enable-disable-rules-by-category" aria-label="Permalink to &quot;Enable/Disable Rules by Category&quot;">&ZeroWidthSpace;</a></h3>
<p>You can now enable or disable entire categories of rules with the <code>categories</code>
field inside of your configuration file.</p>
<p>Now, instead of running this command:</p>
<div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> correctness</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -W</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> suspicious</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> oxlint.json</span></span></code></pre>
</div><p>You can add a <code>categories</code> field to your <code>oxlint.json</code>:</p>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-ZoPGp" id="tab-j4VugB5" checked><label data-title="oxlintrc.json" for="tab-j4VugB5">oxlintrc.json</label></div><div class="blocks">
<div class="language-jsonc vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">{</span></span>
<span class="line diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "categories"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: {          </span></span>
<span class="line diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "correctness"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"deny"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span></span>
<span class="line diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "suspicious"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"warn"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,  </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  },                       </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "rules"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "no-const-assign"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"error"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "import/no-cycle"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"error"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span></code></pre>
</div></div></div>
<p>and drop the <code>-D</code> and <code>-W</code> flags.</p>
<h3 id="plugins-are-now-supported-in-configuration-files" tabindex="-1"><code>plugins</code> Are Now Supported in Configuration Files <a class="header-anchor" href="#plugins-are-now-supported-in-configuration-files" aria-label="Permalink to &quot;`plugins` Are Now Supported in Configuration Files&quot;">&ZeroWidthSpace;</a></h3>
<p>Configuration files now support the <code>plugins</code> array from ESLint v8 configs.
This allows you to enable plugins without CLI arguments, making it possible to
use plugins in VSCode.</p>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-eLEza" id="tab-O36n84A" checked><label data-title="oxlintrc.json" for="tab-O36n84A">oxlintrc.json</label></div><div class="blocks">
<div class="language-jsonc vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">{</span></span>
<span class="line diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "plugins"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"import"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">], </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "categories"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "correctness"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"deny"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "suspicious"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"warn"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "rules"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "react/jsx-uses-react"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"off"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "react/react-in-jsx-scope"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"off"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span></code></pre>
</div></div></div>
<p>This plays nicely with <code>categories</code>, as enabled/disabled categories affect plugins as well.</p>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-37-vw" id="tab-kfQqss9" checked><label data-title="oxlintrc.json" for="tab-kfQqss9">oxlintrc.json</label></div><div class="blocks">
<div class="language-jsonc vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "plugins"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"import"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">  // `categories` affects all enabled plugins</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "categories"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "correctness"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"allow"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "suspicious"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"warn"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "rules"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "no-const-assign"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"error"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "import/no-cycle"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"error"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span></code></pre>
</div></div></div>
<h2 id="breaking-changes-and-migration-guide" tabindex="-1">Breaking Changes and Migration Guide <a class="header-anchor" href="#breaking-changes-and-migration-guide" aria-label="Permalink to &quot;Breaking Changes and Migration Guide&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="cli-vs-config-file-rule-priority" tabindex="-1">CLI vs Config File Rule Priority <a class="header-anchor" href="#cli-vs-config-file-rule-priority" aria-label="Permalink to &quot;CLI vs Config File Rule Priority&quot;">&ZeroWidthSpace;</a></h3>
<p>Before, config files would override rules set in CLI arguments. For example, running this command:</p>
<div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> correctness</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> oxlintrc.json</span></span></code></pre>
</div><p>With this config file</p>
<div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-xBLSk" id="tab-CGx7wwH" checked><label data-title="oxlintrc.json" for="tab-CGx7wwH">oxlintrc.json</label></div><div class="blocks">
<div class="language-jsonc vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "rules"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "no-const-assign"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"error"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span></code></pre>
</div></div></div>
<p>Would result in a single rule, <code>no-const-assign</code> being turned on at an error level with all other rules disabled (i.e. set to &quot;allow&quot;).</p>
<p>Now, <strong>CLI arguments will override config files</strong>. That same command with the
same config file will result with <strong>all rules being disabled</strong>. To get the same
behavior as before, enable and disable categories in your config file instead of
with CLI arguments.</p>
<div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> oxlint.json</span></span></code></pre>
</div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-zHF5T" id="tab-KpIxv-1" checked><label data-title="oxlintrc.json" for="tab-KpIxv-1">oxlintrc.json</label></div><div class="blocks">
<div class="language-jsonc vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">{</span></span>
<span class="line diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "categories"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: {           </span></span>
<span class="line diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "correctness"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"allow"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  },                        </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "rules"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">    "no-const-assign"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"error"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span></code></pre>
</div></div></div>
]]></content>
        <author>
            <name>Don</name>
            <uri>https://github.com/donisaac</uri>
        </author>
    </entry>
</feed>